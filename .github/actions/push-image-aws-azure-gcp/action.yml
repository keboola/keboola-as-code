name: 'Push image to Amazon ECR, Azure ACR and GCP GAR'
description: 'Push image to Amazon ECR, Azure ACR and GCP GAR'
inputs:
  imageName:
    description: Name of the image
    required: true
  imageTag:
    description: Tag of the image
    required: true
  ecrRegion:
    description: Amazon ECR region
    required: true
  ecrRepository:
    description: Amazon ECR repository
    required: true
  ecrPushRole:
    description: Amazon ECR push role
    required: true
  gcpRegistry:
    description: GCP Artifact Registry root URL
    required: true
  gcpRepository:
    description: GCP Repository name
    required: true
  gcpIdentityProvider:
    description: GCP Identity Provider for OIDC integration
    required: true
  gcpServiceAccount:
    description: GCP Service Account for OIDC integration
    required: true
  acrRegistry:
    description: Azure ACR registry
    required: true
  acrRepository:
    description: Azure ACR repository
    required: true
  acrUsername:
    description: Azure ACR username
    required: true
  acrPassword:
    description: Azure ACR password
    required: true
runs:
  using: "composite"
  steps:
    # - name: Configure AWS Credentials
    #   uses: aws-actions/configure-aws-credentials@v4
    #   with:
    #     aws-region: ${{ inputs.ecrRegion }}
    #     role-to-assume: ${{ inputs.ecrPushRole }}

    # - name: Login to Amazon ECR
    #   id: login-ecr
    #   uses: aws-actions/amazon-ecr-login@v2

    # - name: Push image to Amazon ECR
    #   shell: bash
    #   env:
    #     IMAGE: ${{ inputs.imageName }}
    #     TAG: ${{ inputs.imageTag }}
    #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
    #     REPOSITORY: ${{ inputs.ecrRepository }}
    #   run: |
    #     docker tag $IMAGE:$TAG $REGISTRY/$REPOSITORY:$TAG
    #     docker push $REGISTRY/$REPOSITORY:$TAG

    - id: 'gcpAuth'
      name: Authenticate to GCP
      uses: google-github-actions/auth@v2
      with:
        token_format: access_token
        create_credentials_file: true
        workload_identity_provider: ${{ inputs.gcpIdentityProvider }}
        service_account: ${{ inputs.gcpServiceAccount }}

    - name: Login to GCP GAR
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.gcpRegistry }}
        username: oauth2accesstoken
        password: ${{ steps.gcpAuth.outputs.access_token }}

    - name: Push image to GCP GAR
      shell: bash
      env:
        IMAGE: ${{ inputs.imageName }}
        TAG: ${{ inputs.imageTag }}
        REGISTRY: ${{ inputs.gcpRegistry }}
        REPOSITORY: ${{ inputs.gcpRepository }}
      run: |
        docker pull $REGISTRY/$REPOSITORY:stream-v0.3.6
        docker tag $REGISTRY/$REPOSITORY:stream-v0.3.6 europe-west3-docker.pkg.dev/gitops-stacks-provisioning/keboola-as-code/stream-service:stream-v0.3.6

    # - name: Login to Azure ACR
    #   uses: azure/docker-login@v2
    #   with:
    #     login-server: ${{ inputs.acrRegistry }}
    #     username: ${{ inputs.acrUsername }}
    #     password: ${{ inputs.acrPassword }}

    # - name: Push image to Azure ACR
    #   shell: bash
    #   env:
    #     IMAGE: ${{ inputs.imageName }}
    #     TAG: ${{ inputs.imageTag }}
    #     REGISTRY: ${{ inputs.acrRegistry }}
    #     REPOSITORY: ${{ inputs.acrRepository }}
    #   run: |
    #     docker tag $IMAGE:$TAG $REGISTRY/$REPOSITORY:$TAG
    #     docker push $REGISTRY/$REPOSITORY:$TAG
