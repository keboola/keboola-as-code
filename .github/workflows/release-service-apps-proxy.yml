name: 'Release: Apps Proxy'

on:
  push:
    # tags:
    #   - 'apps-proxy-v**'

env:
  # DockerHub login
  DOCKERHUB_USER: "keboolabot"
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

  # Proxy image
  IMAGE_NAME: "keboola/templates-api"
  IMAGE_TAG: ${{ github.ref_name }}
  ECR_REGION: "us-east-1"
  ECR_REPOSITORY: "keboola/templates-api"
  ECR_PUSH_ROLE: "arn:aws:iam::968984773589:role/kbc-ecr-AppsProxyPushRole-Lpj0s3ixYUiN"
  GCP_REGISTRY: "us-central1-docker.pkg.dev"
  GCP_REPOSITORY: "keboola-prod-artifacts/keboola-as-code/templates-api"
  GCP_IDENTITY_PROVIDER: "projects/388088979044/locations/global/workloadIdentityPools/github/providers/github"
  GCP_SERVICE_ACCOUNT: "keboola-as-code-ci-push@keboola-prod-artifacts.iam.gserviceaccount.com"
  ACR_REPOSITORY: "templates-api"
  ACR_REGISTRY: "keboola.azurecr.io"
  ACR_USERNAME: "templates-api-push"

jobs:
  # test-lint:
  #   name: "Lint"
  #   secrets: inherit
  #   uses: ./.github/workflows/test-lint.yml
  # test-unit:
  #   name: "Unit Tests"
  #   secrets: inherit
  #   uses: ./.github/workflows/test-unit.yml
  #   with:
  #     without-cache: true
  # test-k8s-service-apps-proxy:
  #   name: "K8S: Apps Proxy"
  #   secrets: inherit
  #   uses: ./.github/workflows/test-k8s-service-apps-proxy.yml
  build-and-push-proxy-image:
    name: "Build & Push Proxy Image"
    runs-on: ubuntu-latest
    permissions:
      id-token: write
    # needs:
    #   - test-lint
    #   - test-unit
    #   - test-k8s-service-apps-proxy
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Set up Docker Buildx
      #   uses: docker/setup-buildx-action@v3

      # - name: Docker login
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ env.DOCKERHUB_USER }}
      #     password: ${{ env.DOCKERHUB_TOKEN }}

      # - name: Build image
      #   uses: docker/build-push-action@v5
      #   with:
      #     load: true
      #     tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
      #     context: .
      #     file: provisioning/apps-proxy/docker/Dockerfile

      - name: Push image to Amazon ECR, Azure ACR and GCP GAR
        uses: ./.github/actions/push-image-aws-azure-gcp
        with:
          imageName: ${{ env.IMAGE_NAME }}
          imageTag: ${{ env.IMAGE_TAG }}
          ecrRegion: ${{ env.ECR_REGION }}
          ecrRepository: ${{ env.ECR_REPOSITORY }}
          ecrPushRole: ${{ env.ECR_PUSH_ROLE }}
          gcpRegistry: ${{ env.GCP_REGISTRY }}
          gcpRepository: ${{ env.GCP_REPOSITORY }}
          gcpIdentityProvider: ${{ env.GCP_IDENTITY_PROVIDER }}
          gcpServiceAccount: ${{ env.GCP_SERVICE_ACCOUNT }}
          acrRepository: ${{ env.ACR_REPOSITORY }}
          acrRegistry: ${{ env.ACR_REGISTRY }}
          acrUsername: ${{ env.ACR_USERNAME }}
          acrPassword: ${{ secrets.APPS_PROXY_ACR_PASSWORD }}
      - name: Authenticate to GitOps Lab GAR
        id: auth
        uses: google-github-actions/auth@v2
        with:
          project_id: "gitops-stacks-provisioning"
          workload_identity_provider: "projects/311472216905/locations/global/workloadIdentityPools/github/providers/keboola-infrastructure" # gitops-stacks-provisioning
      - name: Docker auth
        shell: bash
        run: |-
          gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
      - name: Tag and push the Docker image
        shell: bash
        run: |
          docker push europe-west3-docker.pkg.dev/gitops-stacks-provisioning/keboola-as-code/templates-api:templates-api-v1.11.0

  # publish-images-main:
  #   name: Publish images (production tag)
  #   # if: github.ref == 'refs/heads/main'
  #   # needs: [tests-aws, tests-azure, tests-gcp]
  #   # needs: build
  #   runs-on: ubuntu-latest
  #   permissions:
  #     id-token: write
  #     contents: read
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4

  #     - uses: ./.github/actions/docker-push
  #       with:
  #         imageCacheKey: sandboxes-service
  #         sourceImage: keboola/sandboxes-service
  #         targetImage: sandboxes-service
  #         targetTag: production-${{ github.sha }}
  #         ecrRegion: us-east-1
  #         ecrPushRole: arn:aws:iam::968984773589:role/kbc-ecr-SandboxesServicePushRole-WmT5HHqfBpog
  #         gcpRepository: keboola-prod-artifacts/sandboxes-service
  #         gcpServiceAccount: sandboxes-service-ci-push@keboola-prod-artifacts.iam.gserviceaccount.com
  #         acrRegistry: keboola.azurecr.io
  #         acrUsername: sandboxes-service-push
  #         acrPassword: ${{ secrets.ACR_PRODUCTION_PUSH_PASSWORD }}
  #     - name: Authenticate to GitOps Lab GAR
  #       id: auth
  #       uses: google-github-actions/auth@v2
  #       with:
  #         project_id: "gitops-stacks-provisioning"
  #         workload_identity_provider: "projects/311472216905/locations/global/workloadIdentityPools/github/providers/keboola-infrastructure" # gitops-stacks-provisioning
  #     - name: Docker auth
  #       shell: bash
  #       run: |-
  #         gcloud auth configure-docker europe-west3-docker.pkg.dev --quiet
  #     - name: Tag and push the Docker image
  #       shell: bash
  #       run: |
  #         docker tag keboola/sandboxes-service:latest ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
  #         docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}
