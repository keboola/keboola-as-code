// Package dependencies provides dependencies for Buffer Service.
//
// # Dependency Containers
//
// This package extends common dependencies from [pkg/github.com/keboola/keboola-as-code/internal/pkg/service/common/dependencies].
//
// Following dependencies containers are implemented:
//   - [ServiceScope] contains common part of dependencies for [WorkerScope] and [APIScope].
//   - [WorkerScope] contains long-lived dependencies that exist during the entire run of a Worker node.
//   - [APIScope] contains long-lived dependencies that exist during the entire run of an API node.
//   - [PublicRequestScope] contains short-lived dependencies for a public request without authentication.
//   - [ProjectRequestScope] contains short-lived dependencies for a request with authentication.
//
// Dependency containers creation:
//   - [ServiceScope] is created during the creation of [WorkerScope] or [APIScope].
//   - [WorkerScope] is created at startup in the Worker main.go.
//   - [APIScope] is created at startup in the API main.go.
//   - [PublicRequestScope] is created for each HTTP request by Muxer.Use callback in main.go.
//   - [ProjectRequestScope] is created for each authenticated HTTP request in the service.APIKeyAuth method.
//
// The package also provides mocked dependency implementations for tests:
//   - [NewMockedServiceScope]
//   - [NewMockedWorkerScope]
//   - [NewMockedAPIScope]
//   - [NewMockedPublicRequestScope]
//   - [NewMockedProjectRequestScope]
//
// Dependencies injection to service endpoints:
//   - Each service endpoint method gets [PublicRequestScope] as a parameter.
//   - Authorized endpoints gets [ProjectRequestScope] instead.
//   - The injection is generated by "internal/pkg/service/common/goaextension/dependencies" package.
//   - See service implementation for details [src/github.com/keboola/keboola-as-code/internal/pkg/service/biffer/api/service/service.go].
package dependencies

import (
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/config"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/event"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/file"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/sink/tablesink/statistics"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/sink/tablesink/storage/level/target/table"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/sink/tablesink/storage/level/target/token"
	"github.com/keboola/keboola-as-code/internal/pkg/service/buffer/watcher"
	"github.com/keboola/keboola-as-code/internal/pkg/service/common/dependencies"
)

type ServiceScope interface {
	dependencies.BaseScope
	dependencies.PublicScope
	dependencies.EtcdClientScope
	dependencies.TaskScope
	ServiceConfig() config.ServiceConfig
	Schema() *schema.Schema
	Store() *store.Store
	FileManager() *file.Manager
	StatisticsRepository() *statistics.Repository
	StatisticsL1Cache() *statistics.L1CacheProvider
	StatisticsL2Cache() *statistics.L2CacheProvider
}

type WorkerScope interface {
	ServiceScope
	dependencies.DistributionScope
	dependencies.OrchestratorScope
	WorkerConfig() config.WorkerConfig
	WatcherWorkerNode() *watcher.WorkerNode
	EventSender() *event.Sender
}

type APIScope interface {
	ServiceScope
	APIConfig() config.APIConfig
	StatsCollector() *statistics.Collector
	WatcherAPINode() *watcher.APINode
}

type PublicRequestScope interface {
	APIScope
	dependencies.RequestInfo
}

type ProjectRequestScope interface {
	PublicRequestScope
	dependencies.ProjectScope
	TokenManager() *token.Manager
	TableManager() *table.Manager
}
