swagger: "2.0"
info:
    title: Stream Service
    description: A service for continuously importing data to the Keboola platform.
    license:
        name: Apache 2.0
        url: http://www.apache.org/licenses/LICENSE-2.0
    version: "1.0"
host: stream.keboola.com
consumes:
    - application/json
produces:
    - application/json
paths:
    /:
        get:
            tags:
                - documentation
            summary: Redirect to /v1
            description: Redirect to /v1.
            operationId: ApiRootIndex
            responses:
                "301":
                    description: Moved Permanently response.
            schemes:
                - https
    /v1:
        get:
            tags:
                - documentation
            summary: List API name and link to documentation.
            description: List API name and link to documentation.
            operationId: ApiVersionIndex
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/ServiceDetail'
                        required:
                            - api
                            - documentation
            schemes:
                - https
    /v1/branches/{branchId}/aggregation/sources:
        get:
            tags:
                - internal
            summary: Aggregation endpoint for sources
            description: Details about sources for the UI.
            operationId: AggregationSources
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AggregatedSourcesResult'
                        required:
                            - projectId
                            - branchId
                            - page
                            - sources
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources:
        get:
            tags:
                - configuration
            summary: List all sources
            description: List all sources in the branch.
            operationId: ListSources
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SourcesList'
                        required:
                            - projectId
                            - branchId
                            - page
                            - sources
            schemes:
                - https
            security:
                - storage-api-token: []
        post:
            tags:
                - configuration
            summary: Create source
            description: Create a new source in the branch.
            operationId: CreateSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: CreateSourceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamCreateSourceRequestBody'
                    required:
                        - type
                        - name
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
                "422":
                    description: Unprocessable Entity response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}:
        get:
            tags:
                - configuration
            summary: Get source
            description: Get the source definition.
            operationId: GetSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Source'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - type
                            - name
                            - description
                            - version
                            - created
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        delete:
            tags:
                - configuration
            summary: Delete source
            description: Delete the source.
            operationId: DeleteSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update source
            description: Update the source.
            operationId: UpdateSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: UpdateSourceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSourceRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/disable:
        put:
            tags:
                - configuration
            summary: Disable source
            description: Disables the source.
            operationId: DisableSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/enable:
        put:
            tags:
                - configuration
            summary: Enable source
            description: Enables the source.
            operationId: EnableSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/settings:
        get:
            tags:
                - configuration
            summary: Get source settings
            description: Get source settings.
            operationId: GetSourceSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SettingsResult'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update source settings
            description: Update source settings.
            operationId: UpdateSourceSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: UpdateSourceSettingsRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSourceSettingsRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks:
        get:
            tags:
                - configuration
            summary: List sinks
            description: List all sinks in the source.
            operationId: ListSinks
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SinksList'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - page
                            - sinks
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        post:
            tags:
                - configuration
            summary: Create sink
            description: Create a new sink in the source.
            operationId: CreateSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: CreateSinkRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamCreateSinkRequestBody'
                    required:
                        - type
                        - name
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
                "422":
                    description: Unprocessable Entity response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}:
        get:
            tags:
                - configuration
            summary: Get sink
            description: Get the sink definition.
            operationId: GetSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Sink'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - sinkId
                            - type
                            - name
                            - description
                            - version
                            - created
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        delete:
            tags:
                - configuration
            summary: Delete sink
            description: Delete the sink.
            operationId: DeleteSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update sink
            description: Update the sink.
            operationId: UpdateSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: UpdateSinkRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSinkRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/disable:
        put:
            tags:
                - configuration
            summary: Disable sink
            description: Disables the sink.
            operationId: DisableSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/enable:
        put:
            tags:
                - configuration
            summary: Enable sink
            description: Enables the sink.
            operationId: EnableSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/settings:
        get:
            tags:
                - configuration
            summary: Get sink settings
            description: Get the sink settings.
            operationId: GetSinkSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SettingsResult'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update sink settings
            description: Update sink settings.
            operationId: UpdateSinkSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: UpdateSinkSettingsRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSinkSettingsRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/statistics/clear:
        delete:
            tags:
                - configuration
            summary: Clear sink statistics
            description: Clears all statistics of the sink.
            operationId: SinkStatisticsClear
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/statistics/files:
        get:
            tags:
                - configuration
            summary: Sink files statistics
            description: Get files statistics of the sink.
            operationId: SinkStatisticsFiles
            parameters:
                - name: failedFiles
                  in: query
                  description: Filter for not imported files. If set to true, only not imported files will be included.
                  required: false
                  type: boolean
                  default: false
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SinkStatisticsFilesResult'
                        required:
                            - files
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/statistics/total:
        get:
            tags:
                - configuration
            summary: Sink statistics total
            description: Get total statistics of the sink.
            operationId: SinkStatisticsTotal
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SinkStatisticsTotalResult'
                        required:
                            - levels
                            - total
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/undelete:
        put:
            tags:
                - configuration
            summary: Undelete sink
            description: Undelete the sink.
            operationId: UndeleteSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/versions:
        get:
            tags:
                - configuration
            summary: List sink versions
            description: List all sink versions.
            operationId: ListSinkVersions
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/EntityVersions'
                        required:
                            - versions
                            - page
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/versions/{versionNumber}:
        get:
            tags:
                - configuration
            summary: Sink version detail
            description: Sink version detail.
            operationId: SinkVersionDetail
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: versionNumber
                  in: path
                  description: Version number counted from 1.
                  required: true
                  type: integer
                  minimum: 1
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Version'
                        required:
                            - number
                            - hash
                            - at
                            - by
                            - description
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/versions/{versionNumber}/rollback:
        put:
            tags:
                - configuration
            summary: Rollback sink version
            description: Rollback sink version.
            operationId: RollbackSinkVersion
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: versionNumber
                  in: path
                  description: Version number counted from 1.
                  required: true
                  type: integer
                  minimum: 1
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/deleted:
        get:
            tags:
                - configuration
            summary: List deleted sinks
            description: List all deleted sinks in the source.
            operationId: ListDeletedSinks
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SinksList'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - page
                            - sinks
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/statistics/clear:
        delete:
            tags:
                - configuration
            summary: Clear source statistics
            description: Clears all statistics of the source.
            operationId: SourceStatisticsClear
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/test:
        post:
            tags:
                - test
            summary: Test source payload mapping
            description: Tests configured mapping of the source and its sinks.
            operationId: TestSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/TestResult'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - tables
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
                "422":
                    description: Unprocessable Entity response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/undelete:
        put:
            tags:
                - configuration
            summary: Undelete source
            description: Undelete the source.
            operationId: UndeleteSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/versions:
        get:
            tags:
                - configuration
            summary: List source versions
            description: List all source versions.
            operationId: ListSourceVersions
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/EntityVersions'
                        required:
                            - versions
                            - page
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/versions/{versionNumber}:
        get:
            tags:
                - configuration
            summary: Source version detail
            description: Source version detail.
            operationId: SourceVersionDetail
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: versionNumber
                  in: path
                  description: Version number counted from 1.
                  required: true
                  type: integer
                  minimum: 1
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Version'
                        required:
                            - number
                            - hash
                            - at
                            - by
                            - description
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/versions/{versionNumber}/rollback:
        put:
            tags:
                - configuration
            summary: Rollback source version
            description: Rollback source version.
            operationId: RollbackSourceVersion
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: versionNumber
                  in: path
                  description: Version number counted from 1.
                  required: true
                  type: integer
                  minimum: 1
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/deleted:
        get:
            tags:
                - configuration
            summary: List all deleted sources
            description: List all deleted sources in the branch.
            operationId: ListDeletedSources
            parameters:
                - name: afterId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/SourcesList'
                        required:
                            - projectId
                            - branchId
                            - page
                            - sources
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/documentation/openapi.json:
        get:
            tags:
                - documentation
            summary: Swagger 2.0 JSON Specification
            operationId: OpenapiJson
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi.yaml:
        get:
            tags:
                - documentation
            summary: Swagger 2.0 YAML Specification
            operationId: OpenapiYaml
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi3.json:
        get:
            tags:
                - documentation
            summary: OpenAPI 3.0 JSON Specification
            operationId: Openapi3Json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi3.yaml:
        get:
            tags:
                - documentation
            summary: OpenAPI 3.0 YAML Specification
            operationId: Openapi3Yaml
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/tasks/{taskId}:
        get:
            tags:
                - configuration
            summary: Get task
            description: Get details of a task.
            operationId: GetTask
            parameters:
                - name: taskId
                  in: path
                  description: Unique ID of the task.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/Task'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/GenericError'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
definitions:
    AggregatedSink:
        title: AggregatedSink
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntity'
            deleted:
                $ref: '#/definitions/DeletedEntity'
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntity'
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            statistics:
                $ref: '#/definitions/AggregatedStatistics'
            table:
                $ref: '#/definitions/TableSink'
            type:
                type: string
                example: table
                enum:
                    - table
            version:
                $ref: '#/definitions/Version'
        description: A mapping from imported data to a destination table.
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid
                          name: id-col
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: path
                          name: path-col
                          path: foo.bar[0]
                          rawString: true
                          defaultValue: ""
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
            statistics:
                total:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                levels:
                    local:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    staging:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    target:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                files:
                    - state: writing
                      openedAt: "2022-04-28T14:20:04.000Z"
                      closingAt: "2022-04-28T14:20:04.000Z"
                      importingAt: "2022-04-28T14:20:04.000Z"
                      importedAt: "2022-04-28T14:20:04.000Z"
                      retryAttempt: 3
                      retryReason: network problem
                      retryAfter: "2022-04-28T14:20:04.000Z"
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
        required:
            - projectId
            - branchId
            - sourceId
            - sinkId
            - type
            - name
            - description
            - version
            - created
    AggregatedSource:
        title: AggregatedSource
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntity'
            deleted:
                $ref: '#/definitions/DeletedEntity'
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntity'
            http:
                $ref: '#/definitions/HTTPSource'
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sinks:
                type: array
                items:
                    $ref: '#/definitions/AggregatedSink'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      sinkId: github-pr-table-sink
                      type: table
                      name: Raw Data Sink
                      description: The sink stores records to a table.
                      table:
                        type: keboola
                        tableId: in.c-bucket.table
                        mapping:
                            columns:
                                - type: uuid
                                  name: id-col
                                - type: datetime
                                  name: datetime-col
                                - type: ip
                                  name: ip-col
                                - type: headers
                                  name: headers-col
                                - type: body
                                  name: body-col
                                - type: path
                                  name: path-col
                                  path: foo.bar[0]
                                  rawString: true
                                  defaultValue: ""
                                - type: template
                                  name: template-col
                                  template:
                                    language: jsonnet
                                    content: body.foo + "-" + body.bar
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                        files:
                            - state: writing
                              openedAt: "2022-04-28T14:20:04.000Z"
                              closingAt: "2022-04-28T14:20:04.000Z"
                              importingAt: "2022-04-28T14:20:04.000Z"
                              importedAt: "2022-04-28T14:20:04.000Z"
                              retryAttempt: 3
                              retryReason: network problem
                              retryAfter: "2022-04-28T14:20:04.000Z"
                              statistics:
                                total:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                levels:
                                    local:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
                                    staging:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
                                    target:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
            version:
                $ref: '#/definitions/Version'
        description: Source of data for further processing, start of the stream, max 100 sources per a branch.
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
            http:
                url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
            sinks:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  sinkId: github-pr-table-sink
                  type: table
                  name: Raw Data Sink
                  description: The sink stores records to a table.
                  table:
                    type: keboola
                    tableId: in.c-bucket.table
                    mapping:
                        columns:
                            - type: uuid
                              name: id-col
                            - type: datetime
                              name: datetime-col
                            - type: ip
                              name: ip-col
                            - type: headers
                              name: headers-col
                            - type: body
                              name: body-col
                            - type: path
                              name: path-col
                              path: foo.bar[0]
                              rawString: true
                              defaultValue: ""
                            - type: template
                              name: template-col
                              template:
                                language: jsonnet
                                content: body.foo + "-" + body.bar
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
                  statistics:
                    total:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    levels:
                        local:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        staging:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        target:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                    files:
                        - state: writing
                          openedAt: "2022-04-28T14:20:04.000Z"
                          closingAt: "2022-04-28T14:20:04.000Z"
                          importingAt: "2022-04-28T14:20:04.000Z"
                          importedAt: "2022-04-28T14:20:04.000Z"
                          retryAttempt: 3
                          retryReason: network problem
                          retryAfter: "2022-04-28T14:20:04.000Z"
                          statistics:
                            total:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            levels:
                                local:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                staging:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                target:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
        required:
            - projectId
            - branchId
            - sourceId
            - type
            - name
            - description
            - version
            - created
            - sinks
    AggregatedSourcesResult:
        title: AggregatedSourcesResult
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            page:
                $ref: '#/definitions/PaginatedResponse'
            projectId:
                type: integer
                example: 123
                format: int64
            sources:
                type: array
                items:
                    $ref: '#/definitions/AggregatedSource'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      type: http
                      name: Github Webhook Source
                      description: The source receives events from Github.
                      http:
                        url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
                      sinks:
                        - projectId: 123
                          branchId: 345
                          sourceId: github-webhook-source
                          sinkId: github-pr-table-sink
                          type: table
                          name: Raw Data Sink
                          description: The sink stores records to a table.
                          table:
                            type: keboola
                            tableId: in.c-bucket.table
                            mapping:
                                columns:
                                    - type: uuid
                                      name: id-col
                                    - type: datetime
                                      name: datetime-col
                                    - type: ip
                                      name: ip-col
                                    - type: headers
                                      name: headers-col
                                    - type: body
                                      name: body-col
                                    - type: path
                                      name: path-col
                                      path: foo.bar[0]
                                      rawString: true
                                      defaultValue: ""
                                    - type: template
                                      name: template-col
                                      template:
                                        language: jsonnet
                                        content: body.foo + "-" + body.bar
                          version:
                            number: 3
                            hash: f43e93acd97eceb3
                            description: The reason for the last change was...
                            at: "2022-04-28T14:20:04.000Z"
                            by:
                                type: user
                                tokenId: "896455"
                                tokenDesc: john.green@company.com
                                userId: "578621"
                                userName: John Green
                          created:
                            at: "2022-04-28T14:20:04.000Z"
                            by:
                                type: user
                                tokenId: "896455"
                                tokenDesc: john.green@company.com
                                userId: "578621"
                                userName: John Green
                          deleted:
                            at: "2022-04-28T14:20:04.000Z"
                            by:
                                type: user
                                tokenId: "896455"
                                tokenDesc: john.green@company.com
                                userId: "578621"
                                userName: John Green
                          disabled:
                            at: "2022-04-28T14:20:04.000Z"
                            by:
                                type: user
                                tokenId: "896455"
                                tokenDesc: john.green@company.com
                                userId: "578621"
                                userName: John Green
                            reason: Disabled for recurring problems.
                          statistics:
                            total:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            levels:
                                local:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                staging:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                target:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                            files:
                                - state: writing
                                  openedAt: "2022-04-28T14:20:04.000Z"
                                  closingAt: "2022-04-28T14:20:04.000Z"
                                  importingAt: "2022-04-28T14:20:04.000Z"
                                  importedAt: "2022-04-28T14:20:04.000Z"
                                  retryAttempt: 3
                                  retryReason: network problem
                                  retryAfter: "2022-04-28T14:20:04.000Z"
                                  statistics:
                                    total:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
                                    levels:
                                        local:
                                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                                            recordsCount: 1
                                            compressedSize: 1
                                            uncompressedSize: 1
                                        staging:
                                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                                            recordsCount: 1
                                            compressedSize: 1
                                            uncompressedSize: 1
                                        target:
                                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                                            recordsCount: 1
                                            compressedSize: 1
                                            uncompressedSize: 1
        example:
            projectId: 123
            branchId: 345
            page:
                limit: 100
                totalCount: 1000
                afterId: my-object-123
                lastId: my-object-456
            sources:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  type: http
                  name: Github Webhook Source
                  description: The source receives events from Github.
                  http:
                    url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
                  sinks:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      sinkId: github-pr-table-sink
                      type: table
                      name: Raw Data Sink
                      description: The sink stores records to a table.
                      table:
                        type: keboola
                        tableId: in.c-bucket.table
                        mapping:
                            columns:
                                - type: uuid
                                  name: id-col
                                - type: datetime
                                  name: datetime-col
                                - type: ip
                                  name: ip-col
                                - type: headers
                                  name: headers-col
                                - type: body
                                  name: body-col
                                - type: path
                                  name: path-col
                                  path: foo.bar[0]
                                  rawString: true
                                  defaultValue: ""
                                - type: template
                                  name: template-col
                                  template:
                                    language: jsonnet
                                    content: body.foo + "-" + body.bar
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                        files:
                            - state: writing
                              openedAt: "2022-04-28T14:20:04.000Z"
                              closingAt: "2022-04-28T14:20:04.000Z"
                              importingAt: "2022-04-28T14:20:04.000Z"
                              importedAt: "2022-04-28T14:20:04.000Z"
                              retryAttempt: 3
                              retryReason: network problem
                              retryAfter: "2022-04-28T14:20:04.000Z"
                              statistics:
                                total:
                                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                                    recordsCount: 1
                                    compressedSize: 1
                                    uncompressedSize: 1
                                levels:
                                    local:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
                                    staging:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
                                    target:
                                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                                        recordsCount: 1
                                        compressedSize: 1
                                        uncompressedSize: 1
        required:
            - projectId
            - branchId
            - page
            - sources
    AggregatedStatistics:
        title: AggregatedStatistics
        type: object
        properties:
            files:
                type: array
                items:
                    $ref: '#/definitions/SinkFile'
                example:
                    - state: writing
                      openedAt: "2022-04-28T14:20:04.000Z"
                      closingAt: "2022-04-28T14:20:04.000Z"
                      importingAt: "2022-04-28T14:20:04.000Z"
                      importedAt: "2022-04-28T14:20:04.000Z"
                      retryAttempt: 3
                      retryReason: network problem
                      retryAfter: "2022-04-28T14:20:04.000Z"
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
            levels:
                $ref: '#/definitions/Levels'
            total:
                $ref: '#/definitions/Level'
        example:
            total:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
            levels:
                local:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                staging:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                target:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
            files:
                - state: writing
                  openedAt: "2022-04-28T14:20:04.000Z"
                  closingAt: "2022-04-28T14:20:04.000Z"
                  importingAt: "2022-04-28T14:20:04.000Z"
                  importedAt: "2022-04-28T14:20:04.000Z"
                  retryAttempt: 3
                  retryReason: network problem
                  retryAfter: "2022-04-28T14:20:04.000Z"
                  statistics:
                    total:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    levels:
                        local:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        staging:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        target:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
        required:
            - total
            - levels
            - files
    By:
        title: By
        type: object
        properties:
            tokenDesc:
                type: string
                description: Description of the token.
                example: john.green@company.com
            tokenId:
                type: string
                description: ID of the token.
                example: "896455"
            type:
                type: string
                description: Date and time of deletion.
                example: user
                enum:
                    - system
                    - user
            userId:
                type: string
                description: ID of the user.
                example: "578621"
            userName:
                type: string
                description: Name of the user.
                example: John Green
        description: Information about the operation actor.
        example:
            type: user
            tokenId: "896455"
            tokenDesc: john.green@company.com
            userId: "578621"
            userName: John Green
        required:
            - type
    CreatedEntity:
        title: CreatedEntity
        type: object
        properties:
            at:
                type: string
                description: Date and time of deletion.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/By'
        description: Information about the entity creation.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - at
            - by
    DeletedEntity:
        title: DeletedEntity
        type: object
        properties:
            at:
                type: string
                description: Date and time of deletion.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/By'
        description: Information about the deleted entity.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - at
            - by
    DisabledEntity:
        title: DisabledEntity
        type: object
        properties:
            at:
                type: string
                description: Date and time of disabling.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/By'
            reason:
                type: string
                description: Why was the entity disabled?
                example: Disabled for recurring problems.
        description: Information about the disabled entity.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
            reason: Disabled for recurring problems.
        required:
            - at
            - by
            - reason
    EntityVersions:
        title: EntityVersions
        type: object
        properties:
            page:
                $ref: '#/definitions/PaginatedResponse'
            versions:
                type: array
                items:
                    $ref: '#/definitions/Version'
                example:
                    - number: 3
                      hash: f43e93acd97eceb3
                      description: The reason for the last change was...
                      at: "2022-04-28T14:20:04.000Z"
                      by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
        example:
            versions:
                - number: 3
                  hash: f43e93acd97eceb3
                  description: The reason for the last change was...
                  at: "2022-04-28T14:20:04.000Z"
                  by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            page:
                limit: 100
                totalCount: 1000
                afterId: my-object-123
                lastId: my-object-456
        required:
            - versions
            - page
    GenericError:
        title: GenericError
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source already exists in the branch.
        example:
            statusCode: 409
            error: stream.api.sourceAlreadyExists
            message: Source already exists in the branch.
        required:
            - statusCode
            - error
            - message
    HTTPSource:
        title: HTTPSource
        type: object
        properties:
            url:
                type: string
                description: URL of the HTTP source. Contains secret used for authentication.
                example: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
        description: HTTP source details for "type" = "http".
        example:
            url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
        required:
            - url
    Level:
        title: Level
        type: object
        properties:
            compressedSize:
                type: integer
                description: Compressed size of data in bytes.
                example: 1
                format: int64
            firstRecordAt:
                type: string
                description: Timestamp of the first received record.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            lastRecordAt:
                type: string
                description: Timestamp of the last received record.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            recordsCount:
                type: integer
                example: 1
                format: int64
            uncompressedSize:
                type: integer
                description: Uncompressed size of data in bytes.
                example: 1
                format: int64
        example:
            firstRecordAt: "2022-04-28T14:20:04.000Z"
            lastRecordAt: "2022-04-28T14:20:04.000Z"
            recordsCount: 1
            compressedSize: 1
            uncompressedSize: 1
        required:
            - recordsCount
            - compressedSize
            - uncompressedSize
    Levels:
        title: Levels
        type: object
        properties:
            local:
                $ref: '#/definitions/Level'
            staging:
                $ref: '#/definitions/Level'
            target:
                $ref: '#/definitions/Level'
        example:
            local:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
            staging:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
            target:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
    PaginatedResponse:
        title: PaginatedResponse
        type: object
        properties:
            afterId:
                type: string
                description: Current offset.
                example: my-object-123
            lastId:
                type: string
                description: ID of the last record in the response.
                example: my-object-456
            limit:
                type: integer
                description: Current limit.
                example: 100
                format: int64
            totalCount:
                type: integer
                description: Total count of all records.
                example: 1000
                format: int64
        example:
            limit: 100
            totalCount: 1000
            afterId: my-object-123
            lastId: my-object-456
        required:
            - afterId
            - limit
            - lastId
            - totalCount
    ServiceDetail:
        title: ServiceDetail
        type: object
        properties:
            api:
                type: string
                description: Name of the API
                example: stream
            documentation:
                type: string
                description: URL of the API documentation.
                example: https://stream.keboola.com/v1/documentation
        example:
            api: stream
            documentation: https://stream.keboola.com/v1/documentation
        required:
            - api
            - documentation
    SettingPatch:
        title: SettingPatch
        type: object
        properties:
            key:
                type: string
                description: Key path.
                example: some.service.limit
                minLength: 1
            value:
                description: A new key value. Use null to reset the value to the default value.
                example: 1m20s
        description: One setting key-value pair.
        example:
            key: some.service.limit
            value: 1m20s
        required:
            - key
    SettingResult:
        title: SettingResult
        type: object
        properties:
            defaultValue:
                description: Default value.
                example: 30s
            description:
                type: string
                description: Key description.
                example: Minimal interval between uploads.
            key:
                type: string
                description: Key path.
                example: some.service.limit
            overwritten:
                type: boolean
                description: True, if the default value is locally overwritten.
                example: true
            protected:
                type: boolean
                description: True, if only a super admin can modify the key.
                example: false
            type:
                type: string
                description: Value type.
                example: string
                enum:
                    - string
                    - int
                    - float
                    - bool
                    - '[]string'
                    - '[]int'
                    - '[]float'
            validation:
                type: string
                description: Validation rules as a string definition.
                example: minDuration=15s
            value:
                description: Actual value.
                example: 1m20s
        description: One setting key-value pair.
        example:
            key: some.service.limit
            type: string
            description: Minimal interval between uploads.
            value: 1m20s
            defaultValue: 30s
            overwritten: true
            protected: false
            validation: minDuration=15s
        required:
            - key
            - type
            - description
            - value
            - defaultValue
            - overwritten
            - protected
    SettingsResult:
        title: SettingsResult
        type: object
        properties:
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingResult'
                example:
                    - key: some.service.limit
                      type: string
                      description: Minimal interval between uploads.
                      value: 1m20s
                      defaultValue: 30s
                      overwritten: true
                      protected: false
                      validation: minDuration=15s
        example:
            settings:
                - key: some.service.limit
                  type: string
                  description: Minimal interval between uploads.
                  value: 1m20s
                  defaultValue: 30s
                  overwritten: true
                  protected: false
                  validation: minDuration=15s
    Sink:
        title: Sink
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntity'
            deleted:
                $ref: '#/definitions/DeletedEntity'
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntity'
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            table:
                $ref: '#/definitions/TableSink'
            type:
                type: string
                example: table
                enum:
                    - table
            version:
                $ref: '#/definitions/Version'
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid
                          name: id-col
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: path
                          name: path-col
                          path: foo.bar[0]
                          rawString: true
                          defaultValue: ""
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - sinkId
            - type
            - name
            - description
            - version
            - created
    SinkFile:
        title: SinkFile
        type: object
        properties:
            closingAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            importedAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            importingAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            openedAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            retryAfter:
                type: string
                description: Next attempt time.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            retryAttempt:
                type: integer
                description: Number of failed attempts.
                example: 3
                format: int64
            retryReason:
                type: string
                description: Reason of the last failed attempt.
                example: network problem
            state:
                type: string
                example: writing
                enum:
                    - writing
                    - closing
                    - importing
                    - imported
            statistics:
                $ref: '#/definitions/SinkFileStatistics'
        example:
            state: writing
            openedAt: "2022-04-28T14:20:04.000Z"
            closingAt: "2022-04-28T14:20:04.000Z"
            importingAt: "2022-04-28T14:20:04.000Z"
            importedAt: "2022-04-28T14:20:04.000Z"
            retryAttempt: 3
            retryReason: network problem
            retryAfter: "2022-04-28T14:20:04.000Z"
            statistics:
                total:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                levels:
                    local:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    staging:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    target:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
        required:
            - state
            - openedAt
    SinkFileStatistics:
        title: SinkFileStatistics
        type: object
        properties:
            levels:
                $ref: '#/definitions/Levels'
            total:
                $ref: '#/definitions/Level'
        example:
            total:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
            levels:
                local:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                staging:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                target:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
        required:
            - total
            - levels
    SinkStatisticsFilesResult:
        title: SinkStatisticsFilesResult
        type: object
        properties:
            files:
                type: array
                items:
                    $ref: '#/definitions/SinkFile'
                example:
                    - state: writing
                      openedAt: "2022-04-28T14:20:04.000Z"
                      closingAt: "2022-04-28T14:20:04.000Z"
                      importingAt: "2022-04-28T14:20:04.000Z"
                      importedAt: "2022-04-28T14:20:04.000Z"
                      retryAttempt: 3
                      retryReason: network problem
                      retryAfter: "2022-04-28T14:20:04.000Z"
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                compressedSize: 1
                                uncompressedSize: 1
        example:
            files:
                - state: writing
                  openedAt: "2022-04-28T14:20:04.000Z"
                  closingAt: "2022-04-28T14:20:04.000Z"
                  importingAt: "2022-04-28T14:20:04.000Z"
                  importedAt: "2022-04-28T14:20:04.000Z"
                  retryAttempt: 3
                  retryReason: network problem
                  retryAfter: "2022-04-28T14:20:04.000Z"
                  statistics:
                    total:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        compressedSize: 1
                        uncompressedSize: 1
                    levels:
                        local:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        staging:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
                        target:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            compressedSize: 1
                            uncompressedSize: 1
        required:
            - files
    SinkStatisticsTotalResult:
        title: SinkStatisticsTotalResult
        type: object
        properties:
            levels:
                $ref: '#/definitions/Levels'
            total:
                $ref: '#/definitions/Level'
        example:
            total:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                compressedSize: 1
                uncompressedSize: 1
            levels:
                local:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                staging:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
                target:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    compressedSize: 1
                    uncompressedSize: 1
        required:
            - levels
            - total
    SinksList:
        title: SinksList
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            page:
                $ref: '#/definitions/PaginatedResponse'
            projectId:
                type: integer
                example: 123
                format: int64
            sinks:
                type: array
                items:
                    $ref: '#/definitions/Sink'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      sinkId: github-pr-table-sink
                      type: table
                      name: Raw Data Sink
                      description: The sink stores records to a table.
                      table:
                        type: keboola
                        tableId: in.c-bucket.table
                        mapping:
                            columns:
                                - type: uuid
                                  name: id-col
                                - type: datetime
                                  name: datetime-col
                                - type: ip
                                  name: ip-col
                                - type: headers
                                  name: headers-col
                                - type: body
                                  name: body-col
                                - type: path
                                  name: path-col
                                  path: foo.bar[0]
                                  rawString: true
                                  defaultValue: ""
                                - type: template
                                  name: template-col
                                  template:
                                    language: jsonnet
                                    content: body.foo + "-" + body.bar
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            page:
                limit: 100
                totalCount: 1000
                afterId: my-object-123
                lastId: my-object-456
            sinks:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  sinkId: github-pr-table-sink
                  type: table
                  name: Raw Data Sink
                  description: The sink stores records to a table.
                  table:
                    type: keboola
                    tableId: in.c-bucket.table
                    mapping:
                        columns:
                            - type: uuid
                              name: id-col
                            - type: datetime
                              name: datetime-col
                            - type: ip
                              name: ip-col
                            - type: headers
                              name: headers-col
                            - type: body
                              name: body-col
                            - type: path
                              name: path-col
                              path: foo.bar[0]
                              rawString: true
                              defaultValue: ""
                            - type: template
                              name: template-col
                              template:
                                language: jsonnet
                                content: body.foo + "-" + body.bar
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - page
            - sinks
    Source:
        title: Source
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntity'
            deleted:
                $ref: '#/definitions/DeletedEntity'
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntity'
            http:
                $ref: '#/definitions/HTTPSource'
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
            version:
                $ref: '#/definitions/Version'
        description: Source of data for further processing, start of the stream, max 100 sources per a branch.
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
            http:
                url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - type
            - name
            - description
            - version
            - created
    SourcesList:
        title: SourcesList
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            page:
                $ref: '#/definitions/PaginatedResponse'
            projectId:
                type: integer
                example: 123
                format: int64
            sources:
                type: array
                items:
                    $ref: '#/definitions/Source'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      type: http
                      name: Github Webhook Source
                      description: The source receives events from Github.
                      http:
                        url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
        example:
            projectId: 123
            branchId: 345
            page:
                limit: 100
                totalCount: 1000
                afterId: my-object-123
                lastId: my-object-456
            sources:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  type: http
                  name: Github Webhook Source
                  description: The source receives events from Github.
                  http:
                    url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - page
            - sources
    StreamCreateSinkRequestBody:
        title: StreamCreateSinkRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            sinkId:
                type: string
                description: Optional ID, if not filled in, it will be generated from name. Cannot be changed later.
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            table:
                $ref: '#/definitions/TableSinkCreate'
            type:
                type: string
                example: table
                enum:
                    - table
        example:
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid
                          name: id-col
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: path
                          name: path-col
                          path: foo.bar[0]
                          rawString: true
                          defaultValue: ""
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
        required:
            - type
            - name
    StreamCreateSourceRequestBody:
        title: StreamCreateSourceRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            sourceId:
                type: string
                description: Optional ID, if not filled in, it will be generated from name. Cannot be changed later.
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
        example:
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
        required:
            - type
            - name
    StreamUpdateSinkRequestBody:
        title: StreamUpdateSinkRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Renamed.
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            table:
                $ref: '#/definitions/TableSinkUpdate'
            type:
                type: string
                example: table
                enum:
                    - table
        example:
            changeDescription: Renamed.
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid
                          name: id-col
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: path
                          name: path-col
                          path: foo.bar[0]
                          rawString: true
                          defaultValue: ""
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
    StreamUpdateSinkSettingsRequestBody:
        title: StreamUpdateSinkSettingsRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Updated settings.
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingPatch'
                example:
                    - key: some.service.limit
                      value: 1m20s
        example:
            changeDescription: Updated settings.
            settings:
                - key: some.service.limit
                  value: 1m20s
    StreamUpdateSourceRequestBody:
        title: StreamUpdateSourceRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Renamed.
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            type:
                type: string
                example: http
                enum:
                    - http
        example:
            changeDescription: Renamed.
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
    StreamUpdateSourceSettingsRequestBody:
        title: StreamUpdateSourceSettingsRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Updated settings.
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingPatch'
                example:
                    - key: some.service.limit
                      value: 1m20s
        example:
            changeDescription: Updated settings.
            settings:
                - key: some.service.limit
                  value: 1m20s
    TableColumn:
        title: TableColumn
        type: object
        properties:
            defaultValue:
                type: string
                description: Fallback value if path doesn't exist.
                example: "1"
            name:
                type: string
                description: Column name.
                example: id-col
            path:
                type: string
                description: Path to the value.
                example: foo.bar[0]
            rawString:
                type: boolean
                description: Set to true if path value should use raw string instead of json-encoded value.
                example: true
            template:
                $ref: '#/definitions/TableColumnTemplate'
            type:
                type: string
                description: Column mapping type. This represents a static mapping (e.g. `body` or `headers`), or a custom mapping using a template language (`template`).
                example: body
                enum:
                    - uuid
                    - datetime
                    - ip
                    - body
                    - headers
                    - path
                    - template
        description: An output mapping defined by a template.
        example:
            type: body
            name: id-col
            path: foo.bar[0]
            defaultValue: "1"
            rawString: true
            template:
                language: jsonnet
                content: body.foo + "-" + body.bar
        required:
            - type
            - name
    TableColumnTemplate:
        title: TableColumnTemplate
        type: object
        properties:
            content:
                type: string
                example: body.foo + "-" + body.bar
                minLength: 1
                maxLength: 4096
            language:
                type: string
                example: jsonnet
                enum:
                    - jsonnet
        description: Template column definition, for "type" = "template".
        example:
            language: jsonnet
            content: body.foo + "-" + body.bar
        required:
            - language
            - content
    TableMapping:
        title: TableMapping
        type: object
        properties:
            columns:
                type: array
                items:
                    $ref: '#/definitions/TableColumn'
                example:
                    - type: uuid
                      name: id-col
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: path
                      name: path-col
                      path: foo.bar[0]
                      rawString: true
                      defaultValue: ""
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
                minItems: 1
                maxItems: 100
        description: Table mapping definition.
        example:
            columns:
                - type: uuid
                  name: id-col
                - type: datetime
                  name: datetime-col
                - type: ip
                  name: ip-col
                - type: headers
                  name: headers-col
                - type: body
                  name: body-col
                - type: path
                  name: path-col
                  path: foo.bar[0]
                  rawString: true
                  defaultValue: ""
                - type: template
                  name: template-col
                  template:
                    language: jsonnet
                    content: body.foo + "-" + body.bar
        required:
            - columns
    TableSink:
        title: TableSink
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMapping'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid
                      name: id-col
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: path
                      name: path-col
                      path: foo.bar[0]
                      rawString: true
                      defaultValue: ""
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
        required:
            - type
            - tableId
            - mapping
    TableSinkCreate:
        title: TableSinkCreate
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMapping'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid
                      name: id-col
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: path
                      name: path-col
                      path: foo.bar[0]
                      rawString: true
                      defaultValue: ""
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
        required:
            - type
            - tableId
            - mapping
    TableSinkUpdate:
        title: TableSinkUpdate
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMapping'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid
                      name: id-col
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: path
                      name: path-col
                      path: foo.bar[0]
                      rawString: true
                      defaultValue: ""
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
    Task:
        title: Task
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputs'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    TaskOutputs:
        title: TaskOutputs
        type: object
        properties:
            branchId:
                type: integer
                description: ID of the parent branch.
                example: 345
                format: int64
            projectId:
                type: integer
                description: ID of the parent project.
                example: 123
                format: int64
            sinkId:
                type: string
                description: ID of the created/updated sink.
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                description: ID of the created/updated source.
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            url:
                type: string
                description: Absolute URL of the entity.
                example: abc123
        description: Outputs generated by the task.
        example:
            url: abc123
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
    TestResult:
        title: TestResult
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            projectId:
                type: integer
                example: 123
                format: int64
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            tables:
                type: array
                items:
                    $ref: '#/definitions/TestResultTable'
                description: Table for each configured sink.
                example:
                    - sinkId: github-pr-table-sink
                      tableId: in.c-bucket.table
                      rows:
                        - columns:
                            - name: id
                              value: "12345"
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            tables:
                - sinkId: github-pr-table-sink
                  tableId: in.c-bucket.table
                  rows:
                    - columns:
                        - name: id
                          value: "12345"
        required:
            - projectId
            - branchId
            - sourceId
            - tables
    TestResultColumn:
        title: TestResultColumn
        type: object
        properties:
            name:
                type: string
                description: Column name.
                example: id
            value:
                type: string
                description: Column value.
                example: "12345"
        description: Generated table column value, part of the test result.
        example:
            name: id
            value: "12345"
        required:
            - name
            - value
    TestResultRow:
        title: TestResultRow
        type: object
        properties:
            columns:
                type: array
                items:
                    $ref: '#/definitions/TestResultColumn'
                description: Generated columns.
                example:
                    - name: id
                      value: "12345"
        description: Generated table row, part of the test result.
        example:
            columns:
                - name: id
                  value: "12345"
        required:
            - columns
    TestResultTable:
        title: TestResultTable
        type: object
        properties:
            rows:
                type: array
                items:
                    $ref: '#/definitions/TestResultRow'
                description: Generated rows.
                example:
                    - columns:
                        - name: id
                          value: "12345"
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            tableId:
                type: string
                example: in.c-bucket.table
        description: Generated table rows, part of the test result.
        example:
            sinkId: github-pr-table-sink
            tableId: in.c-bucket.table
            rows:
                - columns:
                    - name: id
                      value: "12345"
        required:
            - sinkId
            - tableId
            - rows
    Version:
        title: Version
        type: object
        properties:
            at:
                type: string
                description: Date and time of the modification.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/By'
            description:
                type: string
                description: Description of the change.
                example: The reason for the last change was...
            hash:
                type: string
                description: Hash of the entity state.
                example: f43e93acd97eceb3
            number:
                type: integer
                description: Version number counted from 1.
                example: 3
                format: int64
                minimum: 1
        description: Version of the entity.
        example:
            number: 3
            hash: f43e93acd97eceb3
            description: The reason for the last change was...
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - number
            - hash
            - at
            - by
            - description
securityDefinitions:
    storage-api-token:
        type: apiKey
        description: Storage Api Token Authentication.
        name: X-StorageApi-Token
        in: header
