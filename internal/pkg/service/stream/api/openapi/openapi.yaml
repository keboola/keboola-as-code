swagger: "2.0"
info:
    title: Stream Service
    description: A service for continuously importing data to the Keboola platform.
    version: "1.0"
host: stream.keboola.com
consumes:
    - application/json
produces:
    - application/json
paths:
    /:
        get:
            tags:
                - documentation
            summary: Redirect to /v1
            description: Redirect to /v1.
            operationId: ApiRootIndex
            responses:
                "301":
                    description: Moved Permanently response.
            schemes:
                - https
    /v1:
        get:
            tags:
                - documentation
            summary: List API name and link to documentation.
            description: List API name and link to documentation.
            operationId: ApiVersionIndex
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamAPIVersionIndexResponseBody'
                        required:
                            - api
                            - documentation
            schemes:
                - https
    /v1/branches/{branchId}/sources:
        get:
            tags:
                - configuration
            summary: List all sources
            description: List all sources in the branch.
            operationId: ListSources
            parameters:
                - name: sinceId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamListSourcesResponseBody'
                        required:
                            - projectId
                            - branchId
                            - page
                            - sources
            schemes:
                - https
            security:
                - storage-api-token: []
        post:
            tags:
                - configuration
            summary: Create source
            description: Create a new source in the branch.
            operationId: CreateSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: CreateSourceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamCreateSourceRequestBody'
                    required:
                        - type
                        - name
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamCreateSourceResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/StreamCreateSourceStreamAPISourceAlreadyExistsResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
                "422":
                    description: Unprocessable Entity response.
                    schema:
                        $ref: '#/definitions/StreamCreateSourceStreamAPIResourceLimitReachedResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}:
        get:
            tags:
                - configuration
            summary: Get source
            description: Get the source definition.
            operationId: GetSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamGetSourceResponseBody'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - type
                            - name
                            - description
                            - created
                            - version
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamGetSourceStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        delete:
            tags:
                - configuration
            summary: Delete source
            description: Delete the source.
            operationId: DeleteSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamDeleteSourceResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamDeleteSourceStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update source
            description: Update the source.
            operationId: UpdateSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: UpdateSourceRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSourceRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSourceResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSourceStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/settings:
        get:
            tags:
                - configuration
            summary: Get source settings
            description: Get source settings.
            operationId: GetSourceSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamGetSourceSettingsResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamGetSourceSettingsStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update source settings
            description: Update source settings.
            operationId: UpdateSourceSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: UpdateSourceSettingsRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSourceSettingsRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSourceSettingsResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSourceSettingsStreamAPIForbiddenResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks:
        get:
            tags:
                - configuration
            summary: List sinks
            description: List all sinks in the source.
            operationId: ListSinks
            parameters:
                - name: sinceId
                  in: query
                  description: Request records after the ID.
                  required: false
                  type: string
                  default: ""
                - name: limit
                  in: query
                  description: Maximum number of returned records.
                  required: false
                  type: integer
                  default: 100
                  maximum: 100
                  minimum: 1
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamListSinksResponseBody'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - page
                            - sinks
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamListSinksStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        post:
            tags:
                - configuration
            summary: Create sink
            description: Create a new sink in the source.
            operationId: CreateSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: CreateSinkRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamCreateSinkRequestBody'
                    required:
                        - type
                        - name
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamCreateSinkResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamCreateSinkStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
                "409":
                    description: Conflict response.
                    schema:
                        $ref: '#/definitions/StreamCreateSinkStreamAPISinkAlreadyExistsResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
                "422":
                    description: Unprocessable Entity response.
                    schema:
                        $ref: '#/definitions/StreamCreateSinkStreamAPIResourceLimitReachedResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}:
        get:
            tags:
                - configuration
            summary: Get sink
            description: Get the sink definition.
            operationId: GetSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamGetSinkResponseBody'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - sinkId
                            - type
                            - name
                            - description
                            - version
                            - created
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamGetSinkStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        delete:
            tags:
                - configuration
            summary: Delete sink
            description: Delete the sink.
            operationId: DeleteSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamDeleteSinkResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamDeleteSinkStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update sink
            description: Update the sink.
            operationId: UpdateSink
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: UpdateSinkRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSinkRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSinkResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSinkStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/settings:
        get:
            tags:
                - configuration
            summary: Get sink settings
            description: Get the sink settings.
            operationId: GetSinkSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamGetSinkSettingsResponseBody'
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamGetSinkSettingsStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
        patch:
            tags:
                - configuration
            summary: Update sink settings
            description: Update sink settings.
            operationId: UpdateSinkSettings
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
                - name: UpdateSinkSettingsRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/StreamUpdateSinkSettingsRequestBody'
            responses:
                "202":
                    description: Accepted response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSinkSettingsResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamUpdateSinkSettingsStreamAPIForbiddenResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/statistics/files:
        get:
            tags:
                - configuration
            summary: Sink files statistics
            description: Get files statistics of the sink.
            operationId: SinkStatisticsFiles
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamSinkStatisticsFilesResponseBody'
                        required:
                            - files
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamSinkStatisticsFilesStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/sinks/{sinkId}/statistics/total:
        get:
            tags:
                - configuration
            summary: Sink statistics total
            description: Get total statistics of the sink.
            operationId: SinkStatisticsTotal
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
                - name: sinkId
                  in: path
                  description: Unique ID of the sink.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamSinkStatisticsTotalResponseBody'
                        required:
                            - total
                            - levels
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamSinkStatisticsTotalStreamAPISinkNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/branches/{branchId}/sources/{sourceId}/test:
        post:
            tags:
                - test
            summary: Test source payload mapping.
            description: Tests configured mapping of the source and its sinks.
            operationId: TestSource
            parameters:
                - name: branchId
                  in: path
                  description: ID of the branch or "default".
                  required: true
                  type: string
                - name: sourceId
                  in: path
                  description: Unique ID of the source.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamTestSourceResponseBody'
                        required:
                            - projectId
                            - branchId
                            - sourceId
                            - tables
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamTestSourceStreamAPISourceNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
    /v1/documentation/openapi.json:
        get:
            tags:
                - documentation
            summary: Swagger 2.0 JSON Specification
            operationId: OpenapiJson
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi.yaml:
        get:
            tags:
                - documentation
            summary: Swagger 2.0 YAML Specification
            operationId: OpenapiYaml
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi3.json:
        get:
            tags:
                - documentation
            summary: OpenAPI 3.0 JSON Specification
            operationId: Openapi3Json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/documentation/openapi3.yaml:
        get:
            tags:
                - documentation
            summary: OpenAPI 3.0 YAML Specification
            operationId: Openapi3Yaml
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
                - https
    /v1/tasks/{taskId}:
        get:
            tags:
                - configuration
            summary: Get task
            description: Get details of a task.
            operationId: GetTask
            parameters:
                - name: taskId
                  in: path
                  description: Unique ID of the task.
                  required: true
                  type: string
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/StreamGetTaskResponseBody'
                        required:
                            - taskId
                            - type
                            - url
                            - status
                            - isFinished
                            - createdAt
                "404":
                    description: Not Found response.
                    schema:
                        $ref: '#/definitions/StreamGetTaskStreamAPITaskNotFoundResponseBody'
                        required:
                            - statusCode
                            - error
                            - message
            schemes:
                - https
            security:
                - storage-api-token: []
definitions:
    ByResponseBody:
        title: ByResponseBody
        type: object
        properties:
            tokenDesc:
                type: string
                description: Description of the token.
                example: john.green@company.com
            tokenId:
                type: string
                description: ID of the token.
                example: "896455"
            type:
                type: string
                description: Date and time of deletion.
                example: user
                enum:
                    - system
                    - user
            userId:
                type: string
                description: ID of the user.
                example: "578621"
            userName:
                type: string
                description: Name of the user.
                example: John Green
        description: Information about the operation actor.
        example:
            type: user
            tokenId: "896455"
            tokenDesc: john.green@company.com
            userId: "578621"
            userName: John Green
        required:
            - type
    CreatedEntityResponseBody:
        title: CreatedEntityResponseBody
        type: object
        properties:
            at:
                type: string
                description: Date and time of deletion.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/ByResponseBody'
        description: Information about the entity creation.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - at
            - by
    DeletedEntityResponseBody:
        title: DeletedEntityResponseBody
        type: object
        properties:
            at:
                type: string
                description: Date and time of deletion.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/ByResponseBody'
        description: Information about the deleted entity.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - at
            - by
    DisabledEntityResponseBody:
        title: DisabledEntityResponseBody
        type: object
        properties:
            at:
                type: string
                description: Date and time of disabling.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/ByResponseBody'
            reason:
                type: string
                description: Why was the entity disabled?
                example: Disabled for recurring problems.
        description: Information about the disabled entity.
        example:
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
            reason: Disabled for recurring problems.
        required:
            - at
            - by
            - reason
    HTTPSourceResponseBody:
        title: HTTPSourceResponseBody
        type: object
        properties:
            url:
                type: string
                description: URL of the HTTP source. Contains secret used for authentication.
                example: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
        description: HTTP source details for "type" = "http".
        example:
            url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
        required:
            - url
    LevelResponseBody:
        title: LevelResponseBody
        type: object
        properties:
            firstRecordAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            lastRecordAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            recordsCount:
                type: integer
                example: 1
                format: int64
            uncompressedSize:
                type: integer
                example: 1
                format: int64
        example:
            firstRecordAt: "2022-04-28T14:20:04.000Z"
            lastRecordAt: "2022-04-28T14:20:04.000Z"
            recordsCount: 1
            uncompressedSize: 1
        required:
            - recordsCount
            - uncompressedSize
    LevelsResponseBody:
        title: LevelsResponseBody
        type: object
        properties:
            local:
                $ref: '#/definitions/LevelResponseBody'
            staging:
                $ref: '#/definitions/LevelResponseBody'
            target:
                $ref: '#/definitions/LevelResponseBody'
        example:
            local:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                uncompressedSize: 1
            staging:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                uncompressedSize: 1
            target:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                uncompressedSize: 1
    PaginatedResponseResponseBody:
        title: PaginatedResponseResponseBody
        type: object
        properties:
            lastId:
                type: string
                description: ID of the last record in the response.
                example: my-object-456
            limit:
                type: integer
                description: Current limit.
                example: 100
                format: int64
            sinceId:
                type: string
                description: Current offset.
                example: my-object-123
            totalCount:
                type: integer
                description: Total count of all records.
                example: 1000
                format: int64
        example:
            limit: 100
            totalCount: 1000
            sinceId: my-object-123
            lastId: my-object-456
        required:
            - sinceId
            - limit
            - lastId
            - totalCount
    SettingPatchRequestBody:
        title: SettingPatchRequestBody
        type: object
        properties:
            key:
                type: string
                description: Key path.
                example: some.service.limit
                minLength: 1
            value:
                description: A new key value. Use null to reset the value to the default value.
                example: 1m20s
        description: One setting key-value pair.
        example:
            key: some.service.limit
            value: 1m20s
        required:
            - key
    SettingResultResponseBody:
        title: SettingResultResponseBody
        type: object
        properties:
            defaultValue:
                description: Default value.
                example: 30s
            description:
                type: string
                description: Key description.
                example: Minimal interval between uploads.
            key:
                type: string
                description: Key path.
                example: some.service.limit
            overwritten:
                type: boolean
                description: True, if the default value is locally overwritten.
                example: true
            protected:
                type: boolean
                description: True, if only a super admin can modify the key.
                example: false
            type:
                type: string
                description: Value type.
                example: string
                enum:
                    - string
                    - int
                    - float
                    - bool
                    - '[]string'
                    - '[]int'
                    - '[]float'
            validation:
                type: string
                description: Validation rules as a string definition.
                example: minDuration=15s
            value:
                description: Actual value.
                example: 1m20s
        description: One setting key-value pair.
        example:
            key: some.service.limit
            type: string
            description: Minimal interval between uploads.
            value: 1m20s
            defaultValue: 30s
            overwritten: true
            protected: false
            validation: minDuration=15s
        required:
            - key
            - type
            - description
            - value
            - defaultValue
            - overwritten
            - protected
    SinkFileResponseBody:
        title: SinkFileResponseBody
        type: object
        properties:
            closingAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            importedAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            importingAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            openedAt:
                type: string
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            state:
                type: string
                example: writing
                enum:
                    - writing
                    - closing
                    - importing
                    - imported
            statistics:
                $ref: '#/definitions/SinkFileStatisticsResponseBody'
        example:
            state: writing
            openedAt: "2022-04-28T14:20:04.000Z"
            closingAt: "2022-04-28T14:20:04.000Z"
            importingAt: "2022-04-28T14:20:04.000Z"
            importedAt: "2022-04-28T14:20:04.000Z"
            statistics:
                total:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
                levels:
                    local:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        uncompressedSize: 1
                    staging:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        uncompressedSize: 1
                    target:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        uncompressedSize: 1
        required:
            - state
            - openedAt
            - statistics
    SinkFileStatisticsResponseBody:
        title: SinkFileStatisticsResponseBody
        type: object
        properties:
            levels:
                $ref: '#/definitions/LevelsResponseBody'
            total:
                $ref: '#/definitions/LevelResponseBody'
        example:
            total:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                uncompressedSize: 1
            levels:
                local:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
                staging:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
                target:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
        required:
            - total
            - levels
    SinkResponseBody:
        title: SinkResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntityResponseBody'
            deleted:
                $ref: '#/definitions/DeletedEntityResponseBody'
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntityResponseBody'
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            table:
                $ref: '#/definitions/TableSinkResponseBody'
            type:
                type: string
                example: table
                enum:
                    - table
            version:
                $ref: '#/definitions/VersionResponseBody'
        description: A mapping from imported data to a destination table.
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid-v7
                          name: id-col
                          primaryKey: true
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - sinkId
            - type
            - name
            - description
            - version
            - created
    SourceResponseBody:
        title: SourceResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntityResponseBody'
            deleted:
                $ref: '#/definitions/DeletedEntityResponseBody'
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntityResponseBody'
            http:
                $ref: '#/definitions/HTTPSourceResponseBody'
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
            version:
                $ref: '#/definitions/VersionResponseBody'
        description: Source of data for further processing, start of the stream, max 100 sources per a branch.
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
            http:
                url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - type
            - name
            - description
            - created
            - version
    StreamAPIVersionIndexResponseBody:
        title: StreamAPIVersionIndexResponseBody
        type: object
        properties:
            api:
                type: string
                description: Name of the API
                example: stream
            documentation:
                type: string
                description: URL of the API documentation.
                example: https://stream.keboola.com/v1/documentation
        example:
            api: stream
            documentation: https://stream.keboola.com/v1/documentation
        required:
            - api
            - documentation
    StreamCreateSinkRequestBody:
        title: StreamCreateSinkRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            sinkId:
                type: string
                description: Optional ID, if not filled in, it will be generated from name. Cannot be changed later.
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            table:
                $ref: '#/definitions/TableSinkCreateRequestBody'
            type:
                type: string
                example: table
                enum:
                    - table
        example:
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid-v7
                          name: id-col
                          primaryKey: true
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
        required:
            - type
            - name
    StreamCreateSinkResponseBody:
        title: StreamCreateSinkResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamCreateSinkStreamAPIResourceLimitReachedResponseBody:
        title: StreamCreateSinkStreamAPIResourceLimitReachedResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Resource limit reached.
        example:
            statusCode: 422
            error: stream.api.resourceLimitReached
            message: Maximum number of sources per project is 100.
        required:
            - statusCode
            - error
            - message
    StreamCreateSinkStreamAPISinkAlreadyExistsResponseBody:
        title: StreamCreateSinkStreamAPISinkAlreadyExistsResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink already exists in the source.
        example:
            statusCode: 409
            error: stream.api.sinkAlreadyExists
            message: Sink already exists in the source.
        required:
            - statusCode
            - error
            - message
    StreamCreateSinkStreamAPISourceNotFoundResponseBody:
        title: StreamCreateSinkStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamCreateSourceRequestBody:
        title: StreamCreateSourceRequestBody
        type: object
        properties:
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            sourceId:
                type: string
                description: Optional ID, if not filled in, it will be generated from name. Cannot be changed later.
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
        example:
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
        required:
            - type
            - name
    StreamCreateSourceResponseBody:
        title: StreamCreateSourceResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamCreateSourceStreamAPIResourceLimitReachedResponseBody:
        title: StreamCreateSourceStreamAPIResourceLimitReachedResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Resource limit reached.
        example:
            statusCode: 422
            error: stream.api.resourceLimitReached
            message: Maximum number of sources per project is 100.
        required:
            - statusCode
            - error
            - message
    StreamCreateSourceStreamAPISourceAlreadyExistsResponseBody:
        title: StreamCreateSourceStreamAPISourceAlreadyExistsResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source already exists in the branch.
        example:
            statusCode: 409
            error: stream.api.sourceAlreadyExists
            message: Source already exists in the branch.
        required:
            - statusCode
            - error
            - message
    StreamDeleteSinkResponseBody:
        title: StreamDeleteSinkResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamDeleteSinkStreamAPISinkNotFoundResponseBody:
        title: StreamDeleteSinkStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamDeleteSinkStreamAPISourceNotFoundResponseBody:
        title: StreamDeleteSinkStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamDeleteSourceResponseBody:
        title: StreamDeleteSourceResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamDeleteSourceStreamAPISourceNotFoundResponseBody:
        title: StreamDeleteSourceStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSinkResponseBody:
        title: StreamGetSinkResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntityResponseBody'
            deleted:
                $ref: '#/definitions/DeletedEntityResponseBody'
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntityResponseBody'
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            table:
                $ref: '#/definitions/TableSinkResponseBody'
            type:
                type: string
                example: table
                enum:
                    - table
            version:
                $ref: '#/definitions/VersionResponseBody'
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid-v7
                          name: id-col
                          primaryKey: true
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - sinkId
            - type
            - name
            - description
            - version
            - created
    StreamGetSinkSettingsResponseBody:
        title: StreamGetSinkSettingsResponseBody
        type: object
        properties:
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingResultResponseBody'
                example:
                    - key: some.service.limit
                      type: string
                      description: Minimal interval between uploads.
                      value: 1m20s
                      defaultValue: 30s
                      overwritten: true
                      protected: false
                      validation: minDuration=15s
        example:
            settings:
                - key: some.service.limit
                  type: string
                  description: Minimal interval between uploads.
                  value: 1m20s
                  defaultValue: 30s
                  overwritten: true
                  protected: false
                  validation: minDuration=15s
    StreamGetSinkSettingsStreamAPISinkNotFoundResponseBody:
        title: StreamGetSinkSettingsStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSinkSettingsStreamAPISourceNotFoundResponseBody:
        title: StreamGetSinkSettingsStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSinkStreamAPISinkNotFoundResponseBody:
        title: StreamGetSinkStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSinkStreamAPISourceNotFoundResponseBody:
        title: StreamGetSinkStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSourceResponseBody:
        title: StreamGetSourceResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            created:
                $ref: '#/definitions/CreatedEntityResponseBody'
            deleted:
                $ref: '#/definitions/DeletedEntityResponseBody'
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            disabled:
                $ref: '#/definitions/DisabledEntityResponseBody'
            http:
                $ref: '#/definitions/HTTPSourceResponseBody'
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            projectId:
                type: integer
                example: 123
                format: int64
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            type:
                type: string
                example: http
                enum:
                    - http
            version:
                $ref: '#/definitions/VersionResponseBody'
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
            http:
                url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
            created:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            version:
                number: 3
                hash: f43e93acd97eceb3
                description: The reason for the last change was...
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            deleted:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
            disabled:
                at: "2022-04-28T14:20:04.000Z"
                by:
                    type: user
                    tokenId: "896455"
                    tokenDesc: john.green@company.com
                    userId: "578621"
                    userName: John Green
                reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - type
            - name
            - description
            - created
            - version
    StreamGetSourceSettingsResponseBody:
        title: StreamGetSourceSettingsResponseBody
        type: object
        properties:
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingResultResponseBody'
                example:
                    - key: some.service.limit
                      type: string
                      description: Minimal interval between uploads.
                      value: 1m20s
                      defaultValue: 30s
                      overwritten: true
                      protected: false
                      validation: minDuration=15s
        example:
            settings:
                - key: some.service.limit
                  type: string
                  description: Minimal interval between uploads.
                  value: 1m20s
                  defaultValue: 30s
                  overwritten: true
                  protected: false
                  validation: minDuration=15s
    StreamGetSourceSettingsStreamAPISourceNotFoundResponseBody:
        title: StreamGetSourceSettingsStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetSourceStreamAPISourceNotFoundResponseBody:
        title: StreamGetSourceStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamGetTaskResponseBody:
        title: StreamGetTaskResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamGetTaskStreamAPITaskNotFoundResponseBody:
        title: StreamGetTaskStreamAPITaskNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Task not found error.
        example:
            statusCode: 404
            error: stream.api.taskNotFound
            message: Task "001" not found.
        required:
            - statusCode
            - error
            - message
    StreamListSinksResponseBody:
        title: StreamListSinksResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            page:
                $ref: '#/definitions/PaginatedResponseResponseBody'
            projectId:
                type: integer
                example: 123
                format: int64
            sinks:
                type: array
                items:
                    $ref: '#/definitions/SinkResponseBody'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      sinkId: github-pr-table-sink
                      type: table
                      name: Raw Data Sink
                      description: The sink stores records to a table.
                      table:
                        type: keboola
                        tableId: in.c-bucket.table
                        mapping:
                            columns:
                                - type: uuid-v7
                                  name: id-col
                                  primaryKey: true
                                - type: datetime
                                  name: datetime-col
                                - type: ip
                                  name: ip-col
                                - type: headers
                                  name: headers-col
                                - type: body
                                  name: body-col
                                - type: template
                                  name: template-col
                                  template:
                                    language: jsonnet
                                    content: body.foo + "-" + body.bar
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            page:
                limit: 100
                totalCount: 1000
                sinceId: my-object-123
                lastId: my-object-456
            sinks:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  sinkId: github-pr-table-sink
                  type: table
                  name: Raw Data Sink
                  description: The sink stores records to a table.
                  table:
                    type: keboola
                    tableId: in.c-bucket.table
                    mapping:
                        columns:
                            - type: uuid-v7
                              name: id-col
                              primaryKey: true
                            - type: datetime
                              name: datetime-col
                            - type: ip
                              name: ip-col
                            - type: headers
                              name: headers-col
                            - type: body
                              name: body-col
                            - type: template
                              name: template-col
                              template:
                                language: jsonnet
                                content: body.foo + "-" + body.bar
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - sourceId
            - page
            - sinks
    StreamListSinksStreamAPISourceNotFoundResponseBody:
        title: StreamListSinksStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamListSourcesResponseBody:
        title: StreamListSourcesResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            page:
                $ref: '#/definitions/PaginatedResponseResponseBody'
            projectId:
                type: integer
                example: 123
                format: int64
            sources:
                type: array
                items:
                    $ref: '#/definitions/SourceResponseBody'
                example:
                    - projectId: 123
                      branchId: 345
                      sourceId: github-webhook-source
                      type: http
                      name: Github Webhook Source
                      description: The source receives events from Github.
                      http:
                        url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                      created:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      version:
                        number: 3
                        hash: f43e93acd97eceb3
                        description: The reason for the last change was...
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      deleted:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                      disabled:
                        at: "2022-04-28T14:20:04.000Z"
                        by:
                            type: user
                            tokenId: "896455"
                            tokenDesc: john.green@company.com
                            userId: "578621"
                            userName: John Green
                        reason: Disabled for recurring problems.
        example:
            projectId: 123
            branchId: 345
            page:
                limit: 100
                totalCount: 1000
                sinceId: my-object-123
                lastId: my-object-456
            sources:
                - projectId: 123
                  branchId: 345
                  sourceId: github-webhook-source
                  type: http
                  name: Github Webhook Source
                  description: The source receives events from Github.
                  http:
                    url: https://stream-in.keboola.com/G0lpTbz0vhakDicfoDQQ3BCzGYdW3qewd1D3eUbqETygHKGb
                  created:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  version:
                    number: 3
                    hash: f43e93acd97eceb3
                    description: The reason for the last change was...
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  deleted:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                  disabled:
                    at: "2022-04-28T14:20:04.000Z"
                    by:
                        type: user
                        tokenId: "896455"
                        tokenDesc: john.green@company.com
                        userId: "578621"
                        userName: John Green
                    reason: Disabled for recurring problems.
        required:
            - projectId
            - branchId
            - page
            - sources
    StreamSinkStatisticsFilesResponseBody:
        title: StreamSinkStatisticsFilesResponseBody
        type: object
        properties:
            files:
                type: array
                items:
                    $ref: '#/definitions/SinkFileResponseBody'
                example:
                    - state: writing
                      openedAt: "2022-04-28T14:20:04.000Z"
                      closingAt: "2022-04-28T14:20:04.000Z"
                      importingAt: "2022-04-28T14:20:04.000Z"
                      importedAt: "2022-04-28T14:20:04.000Z"
                      statistics:
                        total:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            uncompressedSize: 1
                        levels:
                            local:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                uncompressedSize: 1
                            staging:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                uncompressedSize: 1
                            target:
                                firstRecordAt: "2022-04-28T14:20:04.000Z"
                                lastRecordAt: "2022-04-28T14:20:04.000Z"
                                recordsCount: 1
                                uncompressedSize: 1
        example:
            files:
                - state: writing
                  openedAt: "2022-04-28T14:20:04.000Z"
                  closingAt: "2022-04-28T14:20:04.000Z"
                  importingAt: "2022-04-28T14:20:04.000Z"
                  importedAt: "2022-04-28T14:20:04.000Z"
                  statistics:
                    total:
                        firstRecordAt: "2022-04-28T14:20:04.000Z"
                        lastRecordAt: "2022-04-28T14:20:04.000Z"
                        recordsCount: 1
                        uncompressedSize: 1
                    levels:
                        local:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            uncompressedSize: 1
                        staging:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            uncompressedSize: 1
                        target:
                            firstRecordAt: "2022-04-28T14:20:04.000Z"
                            lastRecordAt: "2022-04-28T14:20:04.000Z"
                            recordsCount: 1
                            uncompressedSize: 1
        required:
            - files
    StreamSinkStatisticsFilesStreamAPISinkNotFoundResponseBody:
        title: StreamSinkStatisticsFilesStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamSinkStatisticsFilesStreamAPISourceNotFoundResponseBody:
        title: StreamSinkStatisticsFilesStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamSinkStatisticsTotalResponseBody:
        title: StreamSinkStatisticsTotalResponseBody
        type: object
        properties:
            levels:
                $ref: '#/definitions/LevelsResponseBody'
            total:
                $ref: '#/definitions/LevelResponseBody'
        example:
            total:
                firstRecordAt: "2022-04-28T14:20:04.000Z"
                lastRecordAt: "2022-04-28T14:20:04.000Z"
                recordsCount: 1
                uncompressedSize: 1
            levels:
                local:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
                staging:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
                target:
                    firstRecordAt: "2022-04-28T14:20:04.000Z"
                    lastRecordAt: "2022-04-28T14:20:04.000Z"
                    recordsCount: 1
                    uncompressedSize: 1
        required:
            - total
            - levels
    StreamSinkStatisticsTotalStreamAPISinkNotFoundResponseBody:
        title: StreamSinkStatisticsTotalStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamSinkStatisticsTotalStreamAPISourceNotFoundResponseBody:
        title: StreamSinkStatisticsTotalStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamTestSourceResponseBody:
        title: StreamTestSourceResponseBody
        type: object
        properties:
            branchId:
                type: integer
                example: 345
                format: int64
            projectId:
                type: integer
                example: 123
                format: int64
            sourceId:
                type: string
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            tables:
                type: array
                items:
                    $ref: '#/definitions/TestResultTableResponseBody'
                description: Table for each configured sink.
                example:
                    - sinkId: github-pr-table-sink
                      tableId: in.c-bucket.table
                      rows:
                        - columns:
                            - name: id
                              value: "12345"
        example:
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            tables:
                - sinkId: github-pr-table-sink
                  tableId: in.c-bucket.table
                  rows:
                    - columns:
                        - name: id
                          value: "12345"
        required:
            - projectId
            - branchId
            - sourceId
            - tables
    StreamTestSourceStreamAPISourceNotFoundResponseBody:
        title: StreamTestSourceStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSinkRequestBody:
        title: StreamUpdateSinkRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Renamed.
            description:
                type: string
                description: Description of the source.
                example: The sink stores records to a table.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the sink.
                example: Raw Data Sink
                minLength: 1
                maxLength: 40
            table:
                $ref: '#/definitions/TableSinkUpdateRequestBody'
            type:
                type: string
                example: table
                enum:
                    - table
        example:
            changeDescription: Renamed.
            type: table
            name: Raw Data Sink
            description: The sink stores records to a table.
            table:
                type: keboola
                tableId: in.c-bucket.table
                mapping:
                    columns:
                        - type: uuid-v7
                          name: id-col
                          primaryKey: true
                        - type: datetime
                          name: datetime-col
                        - type: ip
                          name: ip-col
                        - type: headers
                          name: headers-col
                        - type: body
                          name: body-col
                        - type: template
                          name: template-col
                          template:
                            language: jsonnet
                            content: body.foo + "-" + body.bar
    StreamUpdateSinkResponseBody:
        title: StreamUpdateSinkResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamUpdateSinkSettingsRequestBody:
        title: StreamUpdateSinkSettingsRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Updated settings.
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingPatchRequestBody'
                example:
                    - key: some.service.limit
                      value: 1m20s
        example:
            changeDescription: Updated settings.
            settings:
                - key: some.service.limit
                  value: 1m20s
    StreamUpdateSinkSettingsResponseBody:
        title: StreamUpdateSinkSettingsResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamUpdateSinkSettingsStreamAPIForbiddenResponseBody:
        title: StreamUpdateSinkSettingsStreamAPIForbiddenResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Modification of protected settings is forbidden.
        example:
            statusCode: 404
            error: stream.api.forbidden
            message: 'Cannot modify protected keys: "storage.level.local.compression.gzip.blockSize".'
        required:
            - statusCode
            - error
            - message
    StreamUpdateSinkSettingsStreamAPISinkNotFoundResponseBody:
        title: StreamUpdateSinkSettingsStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSinkSettingsStreamAPISourceNotFoundResponseBody:
        title: StreamUpdateSinkSettingsStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSinkStreamAPISinkNotFoundResponseBody:
        title: StreamUpdateSinkStreamAPISinkNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Sink not found error.
        example:
            statusCode: 404
            error: stream.api.sinkNotFound
            message: Sink "github-changed-files" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSinkStreamAPISourceNotFoundResponseBody:
        title: StreamUpdateSinkStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSourceRequestBody:
        title: StreamUpdateSourceRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Renamed.
            description:
                type: string
                description: Description of the source.
                example: The source receives events from Github.
                maxLength: 4096
            name:
                type: string
                description: Human readable name of the source.
                example: Github Webhook Source
                minLength: 1
                maxLength: 40
            type:
                type: string
                example: http
                enum:
                    - http
        example:
            changeDescription: Renamed.
            type: http
            name: Github Webhook Source
            description: The source receives events from Github.
    StreamUpdateSourceResponseBody:
        title: StreamUpdateSourceResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamUpdateSourceSettingsRequestBody:
        title: StreamUpdateSourceSettingsRequestBody
        type: object
        properties:
            changeDescription:
                type: string
                description: Description of the modification, description of the version.
                example: Updated settings.
            settings:
                type: array
                items:
                    $ref: '#/definitions/SettingPatchRequestBody'
                example:
                    - key: some.service.limit
                      value: 1m20s
        example:
            changeDescription: Updated settings.
            settings:
                - key: some.service.limit
                  value: 1m20s
    StreamUpdateSourceSettingsResponseBody:
        title: StreamUpdateSourceSettingsResponseBody
        type: object
        properties:
            createdAt:
                type: string
                description: Date and time of the task creation.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            duration:
                type: integer
                description: Duration of the task in milliseconds.
                example: 123456789
                format: int64
            error:
                type: string
                example: abc123
            finishedAt:
                type: string
                description: Date and time of the task end.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            isFinished:
                type: boolean
                description: Shortcut for status != "processing".
                example: false
            outputs:
                $ref: '#/definitions/TaskOutputsResponseBody'
            result:
                type: string
                example: abc123
            status:
                type: string
                description: 'Task status, one of: processing, success, error'
                example: success
                enum:
                    - processing
                    - success
                    - error
            taskId:
                type: string
                example: task_1234
            type:
                type: string
                description: Task type.
                example: abc123
            url:
                type: string
                description: URL of the task.
                example: abc123
        example:
            taskId: task_1234
            type: abc123
            url: abc123
            status: success
            isFinished: false
            createdAt: "2022-04-28T14:20:04.000Z"
            finishedAt: "2022-04-28T14:20:04.000Z"
            duration: 123456789
            result: abc123
            error: abc123
            outputs:
                url: abc123
                projectId: 123
                branchId: 345
                sourceId: github-webhook-source
                sinkId: github-pr-table-sink
        required:
            - taskId
            - type
            - url
            - status
            - isFinished
            - createdAt
    StreamUpdateSourceSettingsStreamAPIForbiddenResponseBody:
        title: StreamUpdateSourceSettingsStreamAPIForbiddenResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Modification of protected settings is forbidden.
        example:
            statusCode: 404
            error: stream.api.forbidden
            message: 'Cannot modify protected keys: "storage.level.local.compression.gzip.blockSize".'
        required:
            - statusCode
            - error
            - message
    StreamUpdateSourceSettingsStreamAPISourceNotFoundResponseBody:
        title: StreamUpdateSourceSettingsStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    StreamUpdateSourceStreamAPISourceNotFoundResponseBody:
        title: StreamUpdateSourceStreamAPISourceNotFoundResponseBody
        type: object
        properties:
            error:
                type: string
                description: Name of error.
                example: stream.internalError
            message:
                type: string
                description: Error message.
                example: Internal Error
            statusCode:
                type: integer
                description: HTTP status code.
                example: 500
                format: int64
        description: Source not found error.
        example:
            statusCode: 404
            error: stream.api.sourceNotFound
            message: Source "github-pull-requests" not found.
        required:
            - statusCode
            - error
            - message
    TableColumnRequestBody:
        title: TableColumnRequestBody
        type: object
        properties:
            name:
                type: string
                description: Column name.
                example: id-col
            primaryKey:
                type: boolean
                description: Sets this column as a part of the primary key of the destination table.
                default: false
                example: false
            template:
                $ref: '#/definitions/TableColumnTemplateRequestBody'
            type:
                type: string
                description: Column mapping type. This represents a static mapping (e.g. `body` or `headers`), or a custom mapping using a template language (`template`).
                example: body
                enum:
                    - uuid-v7
                    - datetime
                    - ip
                    - body
                    - headers
                    - template
        description: An output mapping defined by a template.
        example:
            primaryKey: false
            type: body
            name: id-col
            template:
                language: jsonnet
                content: body.foo + "-" + body.bar
        required:
            - type
            - name
    TableColumnResponseBody:
        title: TableColumnResponseBody
        type: object
        properties:
            name:
                type: string
                description: Column name.
                example: id-col
            primaryKey:
                type: boolean
                description: Sets this column as a part of the primary key of the destination table.
                default: false
                example: false
            template:
                $ref: '#/definitions/TableColumnTemplateResponseBody'
            type:
                type: string
                description: Column mapping type. This represents a static mapping (e.g. `body` or `headers`), or a custom mapping using a template language (`template`).
                example: body
                enum:
                    - uuid-v7
                    - datetime
                    - ip
                    - body
                    - headers
                    - template
        description: An output mapping defined by a template.
        example:
            primaryKey: false
            type: body
            name: id-col
            template:
                language: jsonnet
                content: body.foo + "-" + body.bar
        required:
            - type
            - name
    TableColumnTemplateRequestBody:
        title: TableColumnTemplateRequestBody
        type: object
        properties:
            content:
                type: string
                example: body.foo + "-" + body.bar
                minLength: 1
                maxLength: 4096
            language:
                type: string
                example: jsonnet
                enum:
                    - jsonnet
        description: Template column definition, for "type" = "template".
        example:
            language: jsonnet
            content: body.foo + "-" + body.bar
        required:
            - language
            - content
    TableColumnTemplateResponseBody:
        title: TableColumnTemplateResponseBody
        type: object
        properties:
            content:
                type: string
                example: body.foo + "-" + body.bar
                minLength: 1
                maxLength: 4096
            language:
                type: string
                example: jsonnet
                enum:
                    - jsonnet
        description: Template column definition, for "type" = "template".
        example:
            language: jsonnet
            content: body.foo + "-" + body.bar
        required:
            - language
            - content
    TableMappingRequestBody:
        title: TableMappingRequestBody
        type: object
        properties:
            columns:
                type: array
                items:
                    $ref: '#/definitions/TableColumnRequestBody'
                example:
                    - type: uuid-v7
                      name: id-col
                      primaryKey: true
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
                minItems: 1
                maxItems: 100
        description: Table mapping definition.
        example:
            columns:
                - type: uuid-v7
                  name: id-col
                  primaryKey: true
                - type: datetime
                  name: datetime-col
                - type: ip
                  name: ip-col
                - type: headers
                  name: headers-col
                - type: body
                  name: body-col
                - type: template
                  name: template-col
                  template:
                    language: jsonnet
                    content: body.foo + "-" + body.bar
        required:
            - columns
    TableMappingResponseBody:
        title: TableMappingResponseBody
        type: object
        properties:
            columns:
                type: array
                items:
                    $ref: '#/definitions/TableColumnResponseBody'
                example:
                    - type: uuid-v7
                      name: id-col
                      primaryKey: true
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
                minItems: 1
                maxItems: 100
        description: Table mapping definition.
        example:
            columns:
                - type: uuid-v7
                  name: id-col
                  primaryKey: true
                - type: datetime
                  name: datetime-col
                - type: ip
                  name: ip-col
                - type: headers
                  name: headers-col
                - type: body
                  name: body-col
                - type: template
                  name: template-col
                  template:
                    language: jsonnet
                    content: body.foo + "-" + body.bar
        required:
            - columns
    TableSinkCreateRequestBody:
        title: TableSinkCreateRequestBody
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMappingRequestBody'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid-v7
                      name: id-col
                      primaryKey: true
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
        required:
            - type
            - tableId
            - mapping
    TableSinkResponseBody:
        title: TableSinkResponseBody
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMappingResponseBody'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid-v7
                      name: id-col
                      primaryKey: true
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
        required:
            - type
            - tableId
            - mapping
    TableSinkUpdateRequestBody:
        title: TableSinkUpdateRequestBody
        type: object
        properties:
            mapping:
                $ref: '#/definitions/TableMappingRequestBody'
            tableId:
                type: string
                example: in.c-bucket.table
            type:
                type: string
                example: keboola
                enum:
                    - keboola
        description: Table sink configuration for "type" = "table".
        example:
            type: keboola
            tableId: in.c-bucket.table
            mapping:
                columns:
                    - type: uuid-v7
                      name: id-col
                      primaryKey: true
                    - type: datetime
                      name: datetime-col
                    - type: ip
                      name: ip-col
                    - type: headers
                      name: headers-col
                    - type: body
                      name: body-col
                    - type: template
                      name: template-col
                      template:
                        language: jsonnet
                        content: body.foo + "-" + body.bar
    TaskOutputsResponseBody:
        title: TaskOutputsResponseBody
        type: object
        properties:
            branchId:
                type: integer
                description: ID of the parent branch.
                example: 345
                format: int64
            projectId:
                type: integer
                description: ID of the parent project.
                example: 123
                format: int64
            sinkId:
                type: string
                description: ID of the created/updated sink.
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            sourceId:
                type: string
                description: ID of the created/updated source.
                example: github-webhook-source
                minLength: 1
                maxLength: 48
            url:
                type: string
                description: Absolute URL of the entity.
                example: abc123
        description: Outputs generated by the task.
        example:
            url: abc123
            projectId: 123
            branchId: 345
            sourceId: github-webhook-source
            sinkId: github-pr-table-sink
    TestResultColumnResponseBody:
        title: TestResultColumnResponseBody
        type: object
        properties:
            name:
                type: string
                description: Column name.
                example: id
            value:
                type: string
                description: Column value.
                example: "12345"
        description: Generated table column value, part of the test result.
        example:
            name: id
            value: "12345"
        required:
            - name
            - value
    TestResultRowResponseBody:
        title: TestResultRowResponseBody
        type: object
        properties:
            columns:
                type: array
                items:
                    $ref: '#/definitions/TestResultColumnResponseBody'
                description: Generated columns.
                example:
                    - name: id
                      value: "12345"
        description: Generated table row, part of the test result.
        example:
            columns:
                - name: id
                  value: "12345"
        required:
            - columns
    TestResultTableResponseBody:
        title: TestResultTableResponseBody
        type: object
        properties:
            rows:
                type: array
                items:
                    $ref: '#/definitions/TestResultRowResponseBody'
                description: Generated rows.
                example:
                    - columns:
                        - name: id
                          value: "12345"
            sinkId:
                type: string
                example: github-pr-table-sink
                minLength: 1
                maxLength: 48
            tableId:
                type: string
                example: in.c-bucket.table
        description: Generated table rows, part of the test result.
        example:
            sinkId: github-pr-table-sink
            tableId: in.c-bucket.table
            rows:
                - columns:
                    - name: id
                      value: "12345"
        required:
            - sinkId
            - tableId
            - rows
    VersionResponseBody:
        title: VersionResponseBody
        type: object
        properties:
            at:
                type: string
                description: Date and time of the modification.
                example: "2022-04-28T14:20:04.000Z"
                format: date-time
            by:
                $ref: '#/definitions/ByResponseBody'
            description:
                type: string
                description: Description of the change.
                example: The reason for the last change was...
            hash:
                type: string
                description: Hash of the entity state.
                example: f43e93acd97eceb3
            number:
                type: integer
                description: Version number counted from 1.
                example: 3
                format: int64
                minimum: 1
        description: Version of the entity.
        example:
            number: 3
            hash: f43e93acd97eceb3
            description: The reason for the last change was...
            at: "2022-04-28T14:20:04.000Z"
            by:
                type: user
                tokenId: "896455"
                tokenDesc: john.green@company.com
                userId: "578621"
                userName: John Green
        required:
            - number
            - hash
            - at
            - by
            - description
securityDefinitions:
    storage-api-token:
        type: apiKey
        description: Storage Api Token Authentication.
        name: X-StorageApi-Token
        in: header
