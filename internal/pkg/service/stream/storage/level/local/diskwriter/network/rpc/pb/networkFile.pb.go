package

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: networkFile.proto

pb

import (
	reflect "reflect"

	"github.com/sasha-s/go-deadlock"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OpenRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SourceNodeId  string                 `protobuf:"bytes,1,opt,name=source_node_id,json=sourceNodeId,proto3" json:"source_node_id,omitempty"`
	SliceDataJson []byte                 `protobuf:"bytes,2,opt,name=slice_data_json,json=sliceDataJson,proto3" json:"slice_data_json,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenRequest) Reset() {
	*x = OpenRequest{}
	mi := &file_networkFile_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenRequest) ProtoMessage() {}

func (x *OpenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenRequest.ProtoReflect.Descriptor instead.
func (*OpenRequest) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{0}
}

func (x *OpenRequest) GetSourceNodeId() string {
	if x != nil {
		return x.SourceNodeId
	}
	return ""
}

func (x *OpenRequest) GetSliceDataJson() []byte {
	if x != nil {
		return x.SliceDataJson
	}
	return nil
}

type OpenResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        uint64                 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OpenResponse) Reset() {
	*x = OpenResponse{}
	mi := &file_networkFile_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OpenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OpenResponse) ProtoMessage() {}

func (x *OpenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OpenResponse.ProtoReflect.Descriptor instead.
func (*OpenResponse) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{1}
}

func (x *OpenResponse) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type KeepAliveStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        uint64                 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAliveStreamRequest) Reset() {
	*x = KeepAliveStreamRequest{}
	mi := &file_networkFile_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveStreamRequest) ProtoMessage() {}

func (x *KeepAliveStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveStreamRequest.ProtoReflect.Descriptor instead.
func (*KeepAliveStreamRequest) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{2}
}

func (x *KeepAliveStreamRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type KeepAliveStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KeepAliveStreamResponse) Reset() {
	*x = KeepAliveStreamResponse{}
	mi := &file_networkFile_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KeepAliveStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeepAliveStreamResponse) ProtoMessage() {}

func (x *KeepAliveStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeepAliveStreamResponse.ProtoReflect.Descriptor instead.
func (*KeepAliveStreamResponse) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{3}
}

type WriteRequest struct {
	state  protoimpl.MessageState `protogen:"open.v1"`
	FileId uint64                 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	// The "aligned" is true after the pipeline Flush or Close operation.
	// It means that a complete block of data has been written so far.
	Aligned       bool   `protobuf:"varint,2,opt,name=aligned,proto3" json:"aligned,omitempty"`
	Data          []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteRequest) Reset() {
	*x = WriteRequest{}
	mi := &file_networkFile_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteRequest) ProtoMessage() {}

func (x *WriteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteRequest.ProtoReflect.Descriptor instead.
func (*WriteRequest) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{4}
}

func (x *WriteRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

func (x *WriteRequest) GetAligned() bool {
	if x != nil {
		return x.Aligned
	}
	return false
}

func (x *WriteRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type WriteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	N             int64                  `protobuf:"varint,2,opt,name=n,proto3" json:"n,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteResponse) Reset() {
	*x = WriteResponse{}
	mi := &file_networkFile_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteResponse) ProtoMessage() {}

func (x *WriteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteResponse.ProtoReflect.Descriptor instead.
func (*WriteResponse) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{5}
}

func (x *WriteResponse) GetN() int64 {
	if x != nil {
		return x.N
	}
	return 0
}

type SyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        uint64                 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncRequest) Reset() {
	*x = SyncRequest{}
	mi := &file_networkFile_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncRequest) ProtoMessage() {}

func (x *SyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncRequest.ProtoReflect.Descriptor instead.
func (*SyncRequest) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{6}
}

func (x *SyncRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type SyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SyncResponse) Reset() {
	*x = SyncResponse{}
	mi := &file_networkFile_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SyncResponse) ProtoMessage() {}

func (x *SyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SyncResponse.ProtoReflect.Descriptor instead.
func (*SyncResponse) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{7}
}

type CloseRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	FileId        uint64                 `protobuf:"varint,1,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	mi := &file_networkFile_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{8}
}

func (x *CloseRequest) GetFileId() uint64 {
	if x != nil {
		return x.FileId
	}
	return 0
}

type CloseResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	mi := &file_networkFile_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{9}
}

type SliceKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     int64                  `protobuf:"varint,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BranchId      int64                  `protobuf:"varint,2,opt,name=branch_id,json=branchId,proto3" json:"branch_id,omitempty"`
	SourceId      string                 `protobuf:"bytes,3,opt,name=source_id,json=sourceId,proto3" json:"source_id,omitempty"`
	SinkId        string                 `protobuf:"bytes,4,opt,name=sink_id,json=sinkId,proto3" json:"sink_id,omitempty"`
	FileId        *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=file_id,json=fileId,proto3" json:"file_id,omitempty"`
	VolumeId      string                 `protobuf:"bytes,6,opt,name=volume_id,json=volumeId,proto3" json:"volume_id,omitempty"`
	SliceId       *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=slice_id,json=sliceId,proto3" json:"slice_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SliceKey) Reset() {
	*x = SliceKey{}
	mi := &file_networkFile_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SliceKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SliceKey) ProtoMessage() {}

func (x *SliceKey) ProtoReflect() protoreflect.Message {
	mi := &file_networkFile_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SliceKey.ProtoReflect.Descriptor instead.
func (*SliceKey) Descriptor() ([]byte, []int) {
	return file_networkFile_proto_rawDescGZIP(), []int{10}
}

func (x *SliceKey) GetProjectId() int64 {
	if x != nil {
		return x.ProjectId
	}
	return 0
}

func (x *SliceKey) GetBranchId() int64 {
	if x != nil {
		return x.BranchId
	}
	return 0
}

func (x *SliceKey) GetSourceId() string {
	if x != nil {
		return x.SourceId
	}
	return ""
}

func (x *SliceKey) GetSinkId() string {
	if x != nil {
		return x.SinkId
	}
	return ""
}

func (x *SliceKey) GetFileId() *timestamppb.Timestamp {
	if x != nil {
		return x.FileId
	}
	return nil
}

func (x *SliceKey) GetVolumeId() string {
	if x != nil {
		return x.VolumeId
	}
	return ""
}

func (x *SliceKey) GetSliceId() *timestamppb.Timestamp {
	if x != nil {
		return x.SliceId
	}
	return nil
}

var File_networkFile_proto protoreflect.FileDescriptor

const file_networkFile_proto_rawDesc = "" +
	"\n" +
	"\x11networkFile.proto\x12\x02pb\x1a\x1fgoogle/protobuf/timestamp.proto\"[\n" +
	"\vOpenRequest\x12$\n" +
	"\x0esource_node_id\x18\x01 \x01(\tR\fsourceNodeId\x12&\n" +
	"\x0fslice_data_json\x18\x02 \x01(\fR\rsliceDataJson\"'\n" +
	"\fOpenResponse\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x04R\x06fileId\"1\n" +
	"\x16KeepAliveStreamRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x04R\x06fileId\"\x19\n" +
	"\x17KeepAliveStreamResponse\"U\n" +
	"\fWriteRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x04R\x06fileId\x12\x18\n" +
	"\aaligned\x18\x02 \x01(\bR\aaligned\x12\x12\n" +
	"\x04data\x18\x03 \x01(\fR\x04data\"\x1d\n" +
	"\rWriteResponse\x12\f\n" +
	"\x01n\x18\x02 \x01(\x03R\x01n\"&\n" +
	"\vSyncRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x04R\x06fileId\"\x0e\n" +
	"\fSyncResponse\"'\n" +
	"\fCloseRequest\x12\x17\n" +
	"\afile_id\x18\x01 \x01(\x04R\x06fileId\"\x0f\n" +
	"\rCloseResponse\"\x85\x02\n" +
	"\bSliceKey\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\x03R\tprojectId\x12\x1b\n" +
	"\tbranch_id\x18\x02 \x01(\x03R\bbranchId\x12\x1b\n" +
	"\tsource_id\x18\x03 \x01(\tR\bsourceId\x12\x17\n" +
	"\asink_id\x18\x04 \x01(\tR\x06sinkId\x123\n" +
	"\afile_id\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\x06fileId\x12\x1b\n" +
	"\tvolume_id\x18\x06 \x01(\tR\bvolumeId\x125\n" +
	"\bslice_id\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\asliceId2\x95\x02\n" +
	"\vNetworkFile\x12+\n" +
	"\x04Open\x12\x0f.pb.OpenRequest\x1a\x10.pb.OpenResponse\"\x00\x12L\n" +
	"\x0fKeepAliveStream\x12\x1a.pb.KeepAliveStreamRequest\x1a\x1b.pb.KeepAliveStreamResponse0\x01\x12.\n" +
	"\x05Write\x12\x10.pb.WriteRequest\x1a\x11.pb.WriteResponse\"\x00\x12+\n" +
	"\x04Sync\x12\x0f.pb.SyncRequest\x1a\x10.pb.SyncResponse\"\x00\x12.\n" +
	"\x05Close\x12\x10.pb.CloseRequest\x1a\x11.pb.CloseResponse\"\x00B\x05Z\x03pb/b\x06proto3"

var (
	file_networkFile_proto_rawDescData []byte
	file_networkFile_proto_rawDescOnce deadlock.Once
)

func file_networkFile_proto_rawDescGZIP() []byte {
	file_networkFile_proto_rawDescOnce.Do(func() {
		file_networkFile_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_networkFile_proto_rawDesc), len(file_networkFile_proto_rawDesc)))
	})
	return file_networkFile_proto_rawDescData
}

var (
	file_networkFile_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
	file_networkFile_proto_goTypes  = []any{
		(*OpenRequest)(nil),             // 0: pb.OpenRequest
		(*OpenResponse)(nil),            // 1: pb.OpenResponse
		(*KeepAliveStreamRequest)(nil),  // 2: pb.KeepAliveStreamRequest
		(*KeepAliveStreamResponse)(nil), // 3: pb.KeepAliveStreamResponse
		(*WriteRequest)(nil),            // 4: pb.WriteRequest
		(*WriteResponse)(nil),           // 5: pb.WriteResponse
		(*SyncRequest)(nil),             // 6: pb.SyncRequest
		(*SyncResponse)(nil),            // 7: pb.SyncResponse
		(*CloseRequest)(nil),            // 8: pb.CloseRequest
		(*CloseResponse)(nil),           // 9: pb.CloseResponse
		(*SliceKey)(nil),                // 10: pb.SliceKey
		(*timestamppb.Timestamp)(nil),   // 11: google.protobuf.Timestamp
	}
)
var file_networkFile_proto_depIdxs = []int32{
	11, // 0: pb.SliceKey.file_id:type_name -> google.protobuf.Timestamp
	11, // 1: pb.SliceKey.slice_id:type_name -> google.protobuf.Timestamp
	0,  // 2: pb.NetworkFile.Open:input_type -> pb.OpenRequest
	2,  // 3: pb.NetworkFile.KeepAliveStream:input_type -> pb.KeepAliveStreamRequest
	4,  // 4: pb.NetworkFile.Write:input_type -> pb.WriteRequest
	6,  // 5: pb.NetworkFile.Sync:input_type -> pb.SyncRequest
	8,  // 6: pb.NetworkFile.Close:input_type -> pb.CloseRequest
	1,  // 7: pb.NetworkFile.Open:output_type -> pb.OpenResponse
	3,  // 8: pb.NetworkFile.KeepAliveStream:output_type -> pb.KeepAliveStreamResponse
	5,  // 9: pb.NetworkFile.Write:output_type -> pb.WriteResponse
	7,  // 10: pb.NetworkFile.Sync:output_type -> pb.SyncResponse
	9,  // 11: pb.NetworkFile.Close:output_type -> pb.CloseResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_networkFile_proto_init() }
func file_networkFile_proto_init() {
	if File_networkFile_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_networkFile_proto_rawDesc), len(file_networkFile_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_networkFile_proto_goTypes,
		DependencyIndexes: file_networkFile_proto_depIdxs,
		MessageInfos:      file_networkFile_proto_msgTypes,
	}.Build()
	File_networkFile_proto = out.File
	file_networkFile_proto_goTypes = nil
	file_networkFile_proto_depIdxs = nil
}
